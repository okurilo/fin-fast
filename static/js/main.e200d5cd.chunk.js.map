{"version":3,"sources":["model/DailyCost.js","components/Income.js","model/Cost.js","components/Operation.js","components/Day.js","components/Daily.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["DailyCost","id","date","Object","classCallCheck","this","spended","comment","available","saved","Income","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleChangeIncome","event","value","parseInt","target","writeToState","field","handleChangeDays","percentStorageSelect","handleStartDaySelect","endDay","getTime","days","_updateDays","_updateDailyCosts","handleEndDaySelect","startDay","_calcDays","timeDifference","Math","abs","ceil","dailyCosts","newDailyCosts","index","Date","setDate","getDate","push","handleClickCalendarIcon","currentTarget","attributes","datetype","startDatePick","current","onInputClick","endDatePick","React","createRef","_this$props","income","percentStorage","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","style","width","es","ref","selected","dateFormat","placeholderText","locale","ru","cursor","onClick","alt","Component","Cost","text","Operation","addNewCost","costs","toConsumableArray","deleteCost","filter","cost","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","Day","switchEditMode","editMode","state","setState","transformDate","currDate","_addZero","currMonth","getMonth","currYear","getFullYear","toString","concat","length","iconStyle","Daily","hadnleSwitchDetailShow","showDetail","Day_Day","Total","storage","balance","budget","today","tomorrow","AppInitialState","isLoaded","total","Budget","componentDidMount","time","cachedHits","localStorage","getItem","parsed","JSON","parse","setTimeout","handleClearStateStorage","_updateTotal","requiredCosts","_countRequiredCost","_writeToLocal","bind","assertThisInitialized","reduce","accumulator","currentValue","_writeToState","data","defineProperty","setItem","stringify","height","textAlign","Income_Income","Operation_Operation","Daily_Daily","Total_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e200d5cd.chunk.js","sourcesContent":["export default class DailyCost {\r\n    constructor( id, date ) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.spended = 0;\r\n        this.comment = \"\";\r\n        this.available = 0;\r\n        this.saved = 0;\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\nimport DailyCost from \"../model/DailyCost\";\r\n\r\nexport default class Income extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startDatePick = React.createRef();\r\n    this.endDatePick = React.createRef();\r\n  }\r\n\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"income\", value: value});\r\n  }\r\n  handleChangeDays = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"days\", value: value});\r\n  }\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    this.props.writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    const endDay = this.props.endDay;\r\n    if (value.getTime() > endDay.getTime()) {\r\n      return;\r\n    }\r\n    const days = this._updateDays(value, endDay);\r\n    this._updateDailyCosts(value, endDay, days);\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"startDay\", value: value});\r\n  }\r\n  handleEndDaySelect = (value) => {\r\n    value = value || null;\r\n    const startDay = this.props.startDay;\r\n    if (startDay.getTime() > value.getTime()) {\r\n      return;\r\n    }\r\n    const days = this._calcDays(startDay, value);\r\n    this._updateDailyCosts(startDay, value, days);\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"endDay\", value: value});\r\n  }\r\n  _calcDays = (startDay, endDay) => {\r\n    const timeDifference = Math.abs(endDay.getTime() - startDay.getTime());\r\n    const days =  Math.ceil(timeDifference / (1000 * 3600 * 24));\r\n    return days;\r\n  }\r\n  _updateDailyCosts = (startDay, endDay, days) => {\r\n    const dailyCosts = this.props.dailyCosts;\r\n    const newDailyCosts = [];\r\n    for (let index = 1; index <= days; index++) {\r\n      let date = new Date();\r\n      date.setDate(startDay.getDate() + index);\r\n      newDailyCosts.push( new DailyCost(date.getTime(), date) );\r\n    }\r\n    this.props.writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  }\r\n  handleClickCalendarIcon = (event) => {\r\n    const dateType = event.currentTarget.attributes.datetype.value;\r\n    if (dateType === \"SD\") {\r\n      this.startDatePick.current.onInputClick();\r\n    } else { //ED\r\n      this.endDatePick.current.onInputClick();\r\n    }\r\n  }\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      endDay,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.startDatePick}\r\n                 selected={startDay}\r\n                 onChange={this.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} datetype=\"SD\" className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата окончания:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.endDatePick}\r\n                 selected={endDay}\r\n                 onChange={this.handleEndDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату окончания\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} datetype=\"ED\" className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n              {/* <label className=\"text-light\" htmlFor=\"days\">Количество дней:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"days\"\r\n                 placeholder=\"Внесите количество дней\"\r\n                 onChange={this.handleChangeDays}\r\n                 value={days}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">Дней</span>\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class Cost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Cost from '../model/Cost';\r\n\r\nexport default class Operation extends Component {\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const costs = [...this.props.costs];\r\n    // costs.unshift( new Cost(new Date().getTime()) );\r\n    costs.push( new Cost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let costs = [...this.props.costs];\r\n    costs = costs.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  render() {\r\n    const {\r\n        costs\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-primary mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {costs.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Day extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        editMode: false\r\n      };\r\n    }\r\n\r\n    switchEditMode = () => {\r\n        const { editMode } = this.state;\r\n        this.setState({editMode: !editMode});\r\n    }\r\n\r\n    transformDate = (date) => {\r\n        date = new Date(date);\r\n        const currDate = this._addZero(date.getDate());\r\n        const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n        const currYear = date.getFullYear().toString();\r\n        return (`${currDate}.${currMonth}.${currYear}`);\r\n    };\r\n\r\n    _addZero = function (value) {\r\n        value = value.toString() || \"\";\r\n        if (value.length === 1) {\r\n            value = \"0\" + value;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    render() {\r\n        const {editMode} = this.state;\r\n        const {cost} = this.props;\r\n        return (\r\n            <div className=\"card bg-secondary mb-1\">\r\n                <div className=\"card-body row\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <h5 className=\"card-title\">{cost.date ? this.transformDate(cost.date) : \"\"}</h5>\r\n                        <div>\r\n                            { editMode\r\n                                ? <input\r\n                                   type=\"text\"\r\n                                   className=\"form-control-sm w-100\"\r\n                                   id=\"spended\"\r\n                                   placeholder=\"Сумма трат за день\"\r\n                                   onChange={this.handleChangeDays}\r\n                                   value={cost.spended}/>\r\n                                : <span className=\"card-text\">Траты: {cost.spended} руб.</span> }\r\n                        </div>\r\n                        <div>\r\n                            { editMode\r\n                                ? <textarea\r\n                                   type=\"text\"\r\n                                   className=\"form-control mt-2\"\r\n                                   id=\"spended\"\r\n                                   placeholder=\"Введите коментарий\"\r\n                                   onChange={this.handleChangeDays}\r\n                                   value={cost.comment}/>\r\n                                : <p className=\"card-text\">{cost.comment}</p> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-5 d-flex flex-column justify-content-end align-items-end\">\r\n                        <div>\r\n                            <h6 className=\"card-title\">Дневной бюджет: {cost.available} руб.</h6>\r\n                            <h6 className=\"card-title\">Экономия: {cost.saved} руб.</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-1 d-flex align-items-center justify-content-end\">\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> */}\r\n                    { editMode\r\n                        ? <button className=\"btn btn-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-floppy-o\" /></button>\r\n                        : <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Daily.css';\r\nimport Day from './Day';\r\n\r\nconst iconStyle = {\r\n    width: \"0.8rem\",\r\n    cursor: \"pointer\"\r\n};\r\nexport default class Daily extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         showDetail: true\r\n      };\r\n    }\r\n    hadnleSwitchDetailShow = () => {\r\n        this.setState({ showDetail: !this.state.showDetail });\r\n    }\r\n    render() {\r\n        const showDetail = this.state.showDetail ? 'show' : '';\r\n        const { dailyCosts, writeToState } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                    <button type=\"button\" className=\" w-100 text-center btn btn-primary\" onClick={this.hadnleSwitchDetailShow} >\r\n                        <i style={iconStyle} className={\"mr-4 fa \" + (this.state.showDetail ? \"fa-arrow-up\" : \"fa-arrow-down\")} alt=\"Открыть\" />\r\n                        Детализация расходов по дням\r\n                        <i style={iconStyle} className={\"ml-4 fa \" + (this.state.showDetail ? \"fa-arrow-up\" : \"fa-arrow-down\")} alt=\"Открыть\" />\r\n                    </button>\r\n                </div>\r\n                <div className={\"daily text-white bg-primary collapse\" + showDetail} >\r\n                    {/* <h5>Ежедневные расходы</h5> */}\r\n\r\n                    {dailyCosts.map((cost)=>{\r\n                        return (\r\n                            <Day\r\n                             key={cost.id}\r\n                             cost={cost}\r\n                             writeToState={writeToState} />\r\n                        );\r\n                      })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n// const Total = (props) => {\r\nexport default class Total extends Component {\r\n  _addZero = function (value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n  }\r\n  transformDate = (endDay, days) => {\r\n    // console.log(\"Transform Date\");\r\n    let date = new Date(endDay);\r\n    // date.setDate(date.getDate() + days);\r\n    const currDate = this._addZero(date.getDate());\r\n    const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  };\r\n  render() {\r\n    const {storage, balance, budget, endDay, days, percentStorage} = this.props;\r\n    return (\r\n        <div className=\"mt-2 text-white card-group text-center\">\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n              <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">Остаток {endDay ? this.transformDate(endDay, days) : \"\"}</h5>\r\n              <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">в день</h5>\r\n              <p className=\"card-text\">Ежедневный бюджет  {endDay ? this.transformDate(endDay, days) : \"\"}.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )};\r\n  };\r\n\r\n// export default Total;\r\n","import Cost from \"./Cost\";\r\nimport DailyCost from \"./DailyCost\";\r\n\r\nconst today = new Date();\r\nlet tomorrow = new Date();\r\ntomorrow.setDate(today.getDate() + 1);\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.isLoaded = true;\r\n        this.income = 0;\r\n        this.startDay = today;\r\n        this.endDay = tomorrow;\r\n        this.days = 1;\r\n        this.percentStorage = 10;\r\n        this.costs = [ new Cost(today.getTime()) ];\r\n        this.dailyCosts = [ new DailyCost(today.getTime(), today) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Daily from './Daily';\r\nimport Total from './Total';\r\n// import Cost from '../model/Cost';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = new AppInitialState();\r\n  }\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    const loadIndFunc = (time) => {\r\n      this.setState({isLoaded: false});\r\n      setTimeout(() => {\r\n        this.setState({isLoaded: true});\r\n      }, time);\r\n    };\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      parsed.endDay = parsed.endDay ? new Date(parsed.endDay) : null;\r\n      this.setState( parsed );\r\n      // loadIndFunc(2000);\r\n    } else {\r\n      loadIndFunc(3000);\r\n    }\r\n  }\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  \r\n  _updateTotal = () => {\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let costs = [...this.state.costs];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = this._countRequiredCost(costs);\r\n\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    this.setState({total}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n  _countRequiredCost = (costs) => {\r\n    let result = costs.reduce(\r\n      (accumulator, currentValue) => accumulator + currentValue.value,\r\n      0\r\n    );\r\n    return result;\r\n  }\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {\r\n            !isLoaded &&\r\n            <div>\r\n              <div\r\n               className=\"d-flex flex-column justify-content-center align-items-center text-white\"\r\n               style={{height: \"85vh\"}}>\r\n                {/* <div className=\"cm-spinner\"></div> */}\r\n                <div className=\"loader-wrapper\" id=\"loader-1\">\r\n                    <h3 className=\"font-weight-lighter\" style={{textAlign: \"Center\"/* , margin: \"20px\" */}} >\r\n                      Загрузка\r\n                    </h3>\r\n                    <div id=\"loader\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             dailyCosts={this.state.dailyCosts}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             costs={this.state.costs}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Daily\r\n             dailyCosts={this.state.dailyCosts}\r\n             writeToState={this._writeToState} ></Daily>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <div className=\"m-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n          }\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './css/App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './css/custom.css';\nimport './css/index.css';\nimport './css/loadIndicators.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}