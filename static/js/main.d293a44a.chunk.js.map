{"version":3,"sources":["model/DaySpending.js","model/DailyCost.js","utils/Date.js","controllers/IncomeController.js","components/Income.js","model/MandatoryCosts.js","components/Operation.js","components/day/Display.js","components/day/Edit.js","components/day/Day.js","components/Daily.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["DaySpending","id","Object","classCallCheck","this","text","value","isloss","today","Date","DailyCost","date","spended","comment","available","saved","budget","spending","getTime","_addZero","toString","length","transformDate","currDate","getDate","currMonth","getMonth","currYear","getFullYear","concat","calcDaysDifference","startDay","endDay","time","timeDifference","Math","abs","ceil","IncomeController","getProps","startDatePick","endDatePick","_this","handleChangeIncome","event","parseInt","target","writeToState","field","percentStorageSelect","handleStartDaySelect","setHours","days","_updateDailyCosts","handleEndDaySelect","console","log","newDailyCosts","day","month","year","index","dateTime","cost","push","handleClickCalendarIcon","currentTarget","attributes","name","current","onInputClick","Income","props","possibleConstructorReturn","getPrototypeOf","call","React","createRef","_this$props","income","percentStorage","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","style","width","es","ref","selected","dateFormat","placeholderText","locale","ru","cursor","onClick","alt","Component","MandatoryCost","Operation","addNewCost","mandatoryCosts","toConsumableArray","deleteCost","filter","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","Display","isToday","switchEditMode","dayTime","todayTime","bToday","Edit","addNewSpend","changeCostValue","deleteSpend","spend","handleChangeSpendValue","_event$currentTarget","spendIndex","findIndex","Day","editMode","state","setState","Edit_Edit","Display_Display","iconStyle","Daily","handleSwitchDetailShow","showDetail","costId","dailyCosts","costIndex","reduce","sum","btnVis","Day_Day","Total","storage","balance","tomorrow","setDate","AppInitialState","isLoaded","total","Budget","componentDidMount","cachedHits","localStorage","getItem","loadIndFunc","setTimeout","parsed","JSON","parse","_writeToState","data","defineProperty","_updateTotal","_writeToLocal","setItem","stringify","handleClearStateStorage","requiredCosts","accumulator","currentValue","_countRequiredCost","_reCalcDailyCosts","bind","assertThisInitialized","height","textAlign","Income_Income","Operation_Operation","Daily_Daily","Total_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"waAAqBA,EACjB,SAAAA,EAAaC,GAAMC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GACfI,KAAKH,GAAKA,EACVG,KAAKC,KAAO,GACZD,KAAKE,MAAQ,EACbF,KAAKG,QAAS,GCFhBC,EAAQ,IAAIC,KACGC,EACjB,SAAAA,EAAaT,EAAIU,GAAQT,OAAAC,EAAA,EAAAD,CAAAE,KAAAM,GACrBN,KAAKH,GAAKA,EACVG,KAAKO,KAAOA,EACZP,KAAKQ,QAAU,EACfR,KAAKS,QAAU,GACfT,KAAKU,UAAY,EACjBV,KAAKW,MAAQ,EACbX,KAAKY,OAAS,EAEdZ,KAAKa,SAAW,CAAE,IAAIjB,EAAYQ,EAAMU,aCd1CC,EAAW,SAASb,GAKtB,OAHqB,KADrBA,EAAQA,EAAMc,YAAc,IAClBC,SACNf,EAAQ,IAAMA,GAEXA,GAEEgB,EAAgB,SAACX,GAC1BA,EAAO,IAAIF,KAAKE,GAChB,IAAMY,EAAWJ,EAASR,EAAKa,WACzBC,EAAYN,EAASR,EAAKe,WAAa,GACvCC,EAAWhB,EAAKiB,cAAcR,WACpC,SAAAS,OAAWN,EAAX,KAAAM,OAAuBJ,EAAvB,KAAAI,OAAoCF,IAM3BG,EAAqB,SAACC,EAAUC,GACzC,IALoBC,EAKdC,EAAiBC,KAAKC,IAAIJ,EAAOd,UAAYa,EAASb,WAE5D,OAPoBe,EAMCC,EALTC,KAAKE,KAAKJ,EAAI,QCZTK,EACjB,SAAAA,EAAYC,EAAUC,EAAeC,GAAa,IAAAC,EAAAtC,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,GAAAlC,KAOpDuC,mBAAqB,SAACC,GACpB,IAAItC,EAAQuC,SAAUD,EAAME,OAAOxC,MAAO,KAAQ,GAClDA,EAAQA,GAAS,EACjBoC,EAAKH,WAAWQ,aAAa,CAACC,MAAO,SAAU1C,MAAOA,KAVJF,KAapD6C,qBAAuB,SAACL,GACtB,IAAItC,EAAQuC,SAAUD,EAAME,OAAOxC,MAAO,IAC1CoC,EAAKH,WAAWQ,aAAa,CAACC,MAAO,iBAAkB1C,MAAOA,KAfZF,KAkBpD8C,qBAAuB,SAAC5C,GACtBA,EAAQA,GAAS,KACjB,IAAM0B,EAASU,EAAKH,WAAWP,OAK/B,GAJA1B,EAAM6C,SAAS,EAAE,EAAE,EAAE,GACrBnB,EAAOmB,SAAS,EAAE,EAAE,EAAE,KACD7C,EAAMY,UACRc,EAAOd,WAC1B,CAGA,IAAMkC,EAAOtB,EAAmBxB,EAAO0B,GAAU,EACjDU,EAAKH,WAAWQ,aAAa,CAACC,MAAO,OAAQ1C,MAAO8C,IACpDV,EAAKH,WAAWQ,aAAa,CAACC,MAAO,WAAY1C,MAAOA,IAGxDoC,EAAKW,kBAAkB/C,EAAO0B,EAAQoB,KAjCYhD,KAmCpDkD,mBAAqB,SAAChD,GACpBA,EAAQA,GAAS,KACjB,IAAMyB,EAAWW,EAAKH,WAAWR,SAMjC,GALAwB,QAAQC,IAAId,EAAKH,WAAYR,GAC7BzB,EAAM6C,SAAS,EAAE,EAAE,EAAE,GACrBpB,EAASoB,SAAS,EAAE,EAAE,EAAE,KACHpB,EAASb,UACXZ,EAAMY,WACzB,CAGA,IAAMkC,EAAOtB,EAAmBC,EAAUzB,GAAS,EACnDoC,EAAKH,WAAWQ,aAAa,CAACC,MAAO,OAAQ1C,MAAO8C,IACpDV,EAAKH,WAAWQ,aAAa,CAACC,MAAO,SAAU1C,MAAOA,IAGtDoC,EAAKW,kBAAkBtB,EAAUzB,EAAO8C,KAnDUhD,KAsDpDiD,kBAAoB,SAACtB,EAAUC,EAAQoB,GAMrC,IAJA,IAAMK,EAAgB,GAChBC,EAAM3B,EAASP,UACfmC,EAAQ5B,EAASL,WACjBkC,EAAO7B,EAASH,cACbiC,EAAQ,EAAGA,EAAQT,EAAMS,IAAS,CACzC,IAAIlD,EAAO,IAAIF,KAAKmD,EAAMD,EAAOD,EAAMG,GAEjCC,EAAWnD,EAAKO,UAChB6C,EAAO,IAAIrD,EAAUoD,EAAgBnD,GAC3C8C,EAAcO,KAAMD,GAEtBrB,EAAKH,WAAWQ,aAAa,CAACC,MAAO,aAAc1C,MAAOmD,KAnERrD,KAqElD6D,wBAA0B,SAACrB,GACvBW,QAAQC,IAAI,SAAUd,GAET,OADAE,EAAMsB,cAAcC,WAAWC,KAAK9D,MAE7CoC,EAAKF,cAAc6B,QAAQC,eAE3B5B,EAAKD,YAAY4B,QAAQC,gBA1E7BlE,KAAKmC,SAAWA,EAEhBnC,KAAKoC,cAAgBA,EACrBpC,KAAKqC,YAAcA,GCCN8B,cAEnB,SAAAA,EAAYC,GAAO,IAAA9B,EAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,IACjB7B,EAAAxC,OAAAuE,EAAA,EAAAvE,CAAAE,KAAAF,OAAAwE,EAAA,EAAAxE,CAAAqE,GAAAI,KAAAvE,KAAMoE,KAORjC,SAAW,WACT,OAAOG,EAAK8B,OANZ9B,EAAKF,cAAgBoC,IAAMC,YAC3BnC,EAAKD,YAAcmC,IAAMC,YAEzBnC,EAAKJ,iBAAmB,IAAIA,EAAiBI,EAAKH,SAAUG,EAAKF,cAAeE,EAAKD,aANpEC,wEA2EV,IAAAoC,EAMH1E,KAAKoE,MAJPO,EAFKD,EAELC,OACAhD,EAHK+C,EAGL/C,SACAC,EAJK8C,EAIL9C,OACAgD,EALKF,EAKLE,eAEF,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,UAAtC,mCACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACCG,KAAK,OACLF,UAAU,eACVnF,GAAG,SACHsF,YAAY,iHACZC,SAAUpF,KAAKkC,iBAAiBK,mBAChCrC,MAAOyE,IACRE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,QAASN,UAAU,2CAAxC,UAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,QAAtC,kEACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACCC,IAAKxF,KAAKkC,iBAAiBE,cAC3BqD,SAAU9D,EACVyD,SAAUpF,KAAKkC,iBAAiBY,qBAChC4C,WAAW,cACXC,gBAAgB,iHAChBC,OAAQC,MACThB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,OAAQQ,OAAQ,WAAY9B,KAAK,KAAKgB,UAAU,0CAA0Ce,QAAS/F,KAAKkC,iBAAiB2B,yBAC5IgB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBgB,IAAI,+DAK1CnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,QAAtC,oFACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACCC,IAAKxF,KAAKkC,iBAAiBG,YAC3BoD,SAAU7D,EACVwD,SAAUpF,KAAKkC,iBAAiBgB,mBAChCwC,WAAW,cACXC,gBAAgB,mIAChBC,OAAQC,MACThB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,OAAQQ,OAAQ,WAAY9B,KAAK,KAAKgB,UAAU,0CAA0Ce,QAAS/F,KAAKkC,iBAAiB2B,yBAC5IgB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBgB,IAAI,+DAK1CnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,WAAtC,4GACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACCC,UAAU,6BACVnF,GAAG,UACHK,MAAO0E,EACPQ,SAAUpF,KAAKkC,iBAAiBW,sBAC/BgC,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,KAAd,KACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,MACA2E,EAAAC,EAAAC,cAAA,UAAQ7E,MAAM,MAAd,OAEF2E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,QAASN,UAAU,2CAAxC,gBA3JkBiB,aCTfC,EACjB,SAAAA,EAAarG,GAAMC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkG,GACflG,KAAKH,GAAKA,EACVG,KAAKC,KAAO,GACZD,KAAKE,MAAQ,GCDAiG,6MAEnBC,WAAa,WAEX,IAAMC,EAAcvG,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8B,MAAMiC,gBAEtCA,EAAezC,KAAM,IAAIsC,GAAc,IAAI7F,MAAOS,YAClDwB,EAAK8B,MAAMzB,aAAa,CAACC,MAAO,iBAAkB1C,MAAOmG,OAG3DE,WAAa,SAAC/D,GACZ,IAAM3C,GAAM2C,EAAME,OAAO7C,GAErBwG,EAAcvG,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8B,MAAMiC,gBACpCA,EAAiBA,EAAeG,OAAO,SAAC7C,GACtC,OAAOA,EAAK9D,KAAOA,IAErByC,EAAK8B,MAAMzB,aAAa,CAACC,MAAO,iBAAkB1C,MAAOmG,OAG3DI,qBAAuB,SAACjE,GACtB,IAAM3C,GAAM2C,EAAME,OAAO7C,GACnBK,EAAQsC,EAAME,OAAOxC,MACvBmG,EAAcvG,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8B,MAAMiC,gBACpCA,EAAeK,QAAQ,SAACC,GAClBA,EAAG9G,KAAOA,IACZ8G,EAAG1G,KAAOC,KAGdoC,EAAK8B,MAAMzB,aAAa,CAACC,MAAO,iBAAkB1C,MAAOmG,OAG3DO,sBAAwB,SAACpE,GAEvB,IAAM3C,GAAM2C,EAAME,OAAO7C,GACnBK,EAAQuC,SAAUD,EAAME,OAAOxC,MAAO,KAAQ,GAEhDmG,EAAcvG,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8B,MAAMiC,gBACpCA,EAAeK,QAAQ,SAACC,GAClBA,EAAG9G,KAAOA,IACZ8G,EAAGzG,MAAQA,KAGfoC,EAAK8B,MAAMzB,aAAa,CAACC,MAAO,iBAAkB1C,MAAOmG,6EAGlD,IAAAQ,EAAA7G,KAEHqG,EACArG,KAAKoE,MADLiC,eAEJ,OACIxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,uHACCqB,EAAeS,IAAI,SAACnD,GACjB,OACIkB,EAAAC,EAAAC,cAAA,OAAKgC,IAAKpD,EAAK9D,GAAImF,UAAU,wBAC3BH,EAAAC,EAAAC,cAAA,QAAAjF,OAAAkH,OAAA,GACKrD,EADL,CAECuB,KAAK,OACLF,UAAU,eACVI,SAAUyB,EAAKD,sBACf1G,MAAOyD,EAAKzD,MACZiF,YAAY,iCAAQ8B,aAAW,iCAAQC,mBAAiB,mBACzDrC,EAAAC,EAAAC,cAAA,QAAAjF,OAAAkH,OAAA,GACKrD,EADL,CAECuB,KAAK,OACLF,UAAU,eACVI,SAAUyB,EAAKJ,qBACfvG,MAAOyD,EAAK1D,KACZkF,YAAY,mIAA0B8B,aAAW,mIAA0BC,mBAAiB,mBAC7FrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBnF,GAAG,iBAErCgF,EAAAC,EAAAC,cAAA,SAAAjF,OAAAkH,OAAA,GACKrD,EADL,CAECoC,QAASc,EAAKN,WACdvB,UAAU,2BACVE,KAAK,WAJN,SASZL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASF,UAAU,gCAAgCe,QAAU/F,KAAKoG,YAA/E,8DAnFqBH,aCAlBkB,0NACjBC,QAAU,SAAC7G,GACP,IAAMH,EAAQ,IAAIC,KAElB,OAAOE,EAAKa,YAAchB,EAAMgB,WAC9Bb,EAAKe,aAAelB,EAAMkB,YAC1Bf,EAAKiB,gBAAkBpB,EAAMoB,uFAG1B,IAAAkD,EAC0B1E,KAAKoE,MAA7BT,EADFe,EACEf,KAAM0D,EADR3C,EACQ2C,eACPC,EAAU3D,EAAKpD,KAAKO,UAEpByG,GADY,IAAIlH,MACMS,UACtB0G,EAASxH,KAAKoH,QAAQzD,EAAKpD,MACjC,OACIsE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTrB,EAAKpD,KACAW,EAAcyC,EAAKpD,OAASiH,EAAS,gDAAe,IACpD,IAEV3C,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,mCAAqCrB,EAAKnD,QAAU,EAAK,IAAMmD,EAAKnD,QAApE,yBAEHqE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAarB,EAAKlD,WAG1CoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oFAA4CrB,EAAK/C,OAAjD,wBACAiE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,uGAAgDrB,EAAKjD,UAArD,wBACG4G,EAAUC,GACT1C,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,uEAA8CrB,EAAKhD,MAAnD,wBACAkE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAgCH,EAAAC,EAAAC,cAAA,4MAK9DF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDe,QAASsB,GACvExC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,2BA7CAiB,cCChBwB,6MACjBC,YAAc,WAAM,IACT/D,EAAQrB,EAAK8B,MAAbT,KACH9C,EAAQf,OAAAwG,EAAA,EAAAxG,CAAO6D,EAAK9C,UAExBA,EAAS+C,KAAM,IAAIhE,GAAY,IAAIS,MAAOS,YAC1CwB,EAAK8B,MAAMuD,gBAAgBhE,EAAK9D,GAAIgB,MAGxC+G,YAAc,SAACpF,GACX,IAAM3C,GAAM2C,EAAME,OAAO7C,GAElB8D,EAAQrB,EAAK8B,MAAbT,KACH9C,EAAQf,OAAAwG,EAAA,EAAAxG,CAAO6D,EAAK9C,UACxBA,EAAWA,EAAS2F,OAAO,SAACqB,GAC1B,OAAOA,EAAMhI,KAAOA,IAEtByC,EAAK8B,MAAMuD,gBAAgBhE,EAAK9D,GAAIgB,MAExCiH,uBAAyB,SAACtF,GAAU,IAW5BtC,EATGyD,EAAQrB,EAAK8B,MAAbT,KACD9C,EAAQf,OAAAwG,EAAA,EAAAxG,CAAO6D,EAAK9C,UAHMkH,EAKXvF,EAAMsB,cAAnBjE,EALwBkI,EAKxBlI,GAAImE,EALoB+D,EAKpB/D,KAIRgE,EAAanH,EAASoH,UAHT,SAACtB,EAAIlD,GAClB,OAAQkD,EAAG9G,MAAQA,IAKvB,OAAQmE,GACJ,IAAK,QAED9D,GADAA,EAAQuC,SAASD,EAAME,OAAOxC,MAAO,KAAO,KAC3B,EACjB,MACJ,IAAK,SAEDA,GAASW,EAASmH,GAAY7H,OAC9B,MACJ,IAAK,UACL,QACID,EAAQsC,EAAME,OAAOxC,MAG7BW,EAASmH,GAAYhE,GAAQ9D,EAE7BoC,EAAK8B,MAAMuD,gBAAgBhE,EAAK9D,GAAIgB,4EAG/B,IAAAgG,EAAA7G,KAAA0E,EAC2C1E,KAAKoE,MAA9CT,EADFe,EACEf,KAAM0D,EADR3C,EACQ2C,eACPC,GAFD5C,EACwBiD,gBACbhE,EAAKpD,KAAKO,WAEpByG,GADY,IAAIlH,MACMS,UAE5B,OACI+D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcrB,EAAKpD,KAAOW,EAAcyC,EAAKpD,MAAQ,IACnEsE,EAAAC,EAAAC,cAAA,WACGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,mCAAqCrB,EAAKnD,QAAU,EAAK,IAAMmD,EAAKnD,QAApE,yBAEHqE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAarB,EAAKlD,WAG1CoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,8HACErB,EAAK9C,SAASiG,IAAI,SAACe,GACjB,OACIhD,EAAAC,EAAAC,cAAA,OAAKgC,IAAKc,EAAMhI,IACZgF,EAAAC,EAAAC,cAAA,OAAMC,UAAU,kCACZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,UAAQlF,GAAIgI,EAAMhI,GAAImE,KAAK,SAASgB,UAAU,kBAAkBe,QAASc,EAAKiB,wBACxED,EAAM1H,OACF0E,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAcgB,IAAI,0CAC/BnB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAagB,IAAI,sCAI5CnB,EAAAC,EAAAC,cAAA,SACElF,GAAIgI,EAAMhI,GACXqF,KAAK,OACLlB,KAAK,QACLgB,UAAU,eACVI,SAAUyB,EAAKiB,uBACf5H,MAAO2H,EAAM3H,MACbiF,YAAY,iCAAQ8B,aAAW,iCAAQC,mBAAiB,kBACzDrC,EAAAC,EAAAC,cAAA,SACElF,GAAIgI,EAAMhI,GACXqF,KAAK,OACLlB,KAAK,OACLgB,UAAU,eACVI,SAAUyB,EAAKiB,uBACf5H,MAAO2H,EAAM5H,KACbkF,YAAY,mIAA0B8B,aAAW,mIAA0BC,mBAAiB,kBAC7FrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBnF,GAAG,iBAErCgF,EAAAC,EAAAC,cAAA,UACClF,GAAIgI,EAAMhI,GACVkG,QAASc,EAAKe,YACd5C,UAAU,2BACVE,KAAK,UAJN,UAWlBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASF,UAAU,8BAA8Be,QAAU/F,KAAK0H,aAA7E,sDAGN7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wCACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oFAA4CrB,EAAK/C,OAAjD,wBACAiE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,uGAAgDrB,EAAKjD,UAArD,wBACG6G,EAAYD,GACXzC,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,uEAA8CrB,EAAKhD,MAAnD,wBACAkE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAgCH,EAAAC,EAAAC,cAAA,4MAK9DF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDe,QAASsB,GAAiBxC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BA/H3FiB,aCEbiC,cACjB,SAAAA,EAAY9D,GAAO,IAAA9B,EAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkI,IACjB5F,EAAAxC,OAAAuE,EAAA,EAAAvE,CAAAE,KAAAF,OAAAwE,EAAA,EAAAxE,CAAAoI,GAAA3D,KAAAvE,KAAMoE,KAORiD,eAAiB,WAAM,IACXc,EAAa7F,EAAK8F,MAAlBD,SACR7F,EAAK+F,SAAS,CAACF,UAAWA,KAP5B7F,EAAK8F,MAAQ,CACXD,UAAU,GAJK7F,wEAwBV,IACE6F,EAAYnI,KAAKoI,MAAjBD,SADFzD,EAE2B1E,KAAKoE,MAA9BT,EAFFe,EAEEf,KAAMgE,EAFRjD,EAEQiD,gBACb,OACI9C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,+BAAiCmD,EAAW,eAAiB,KACvEA,EACItD,EAAAC,EAAAC,cAACuD,EAAD,CAAMX,gBAAiBA,EAAiBhE,KAAMA,EAAM0D,eAAgBrH,KAAKqH,iBACzExC,EAAAC,EAAAC,cAACwD,EAAD,CAAS5E,KAAMA,EAAM0D,eAAgBrH,KAAKqH,yBAhC/BpB,aCF3BuC,EAAY,CACdlD,MAAO,SACPQ,OAAQ,WAES2C,cACjB,SAAAA,EAAYrE,GAAO,IAAA9B,EAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyI,IACjBnG,EAAAxC,OAAAuE,EAAA,EAAAvE,CAAAE,KAAAF,OAAAwE,EAAA,EAAAxE,CAAA2I,GAAAlE,KAAAvE,KAAMoE,KAMRsE,uBAAyB,WACrBpG,EAAK+F,SAAS,CAAEM,YAAarG,EAAK8F,MAAMO,cARzBrG,EAUnBsE,sBAAwB,SAACgC,EAAQ/H,GAC7B,IAAMgI,EAAU/I,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8B,MAAMyE,YAgB9BC,EAAYD,EAAWZ,UAHV,SAACtB,EAAIlD,GAClB,OAAQkD,EAAG9G,MAAQ+I,IAGvBC,EAAWC,GAAWjI,SAAWA,EACjCgI,EAAWC,GAAWtI,QAAUK,EAASkI,OAAO,SAACC,EAAKrC,GAClD,OAAOA,EAAGxG,OAAS6I,EAAMrC,EAAGzG,MAAQ8I,EAAMrC,EAAGzG,OAC9C,GAEHoC,EAAK8B,MAAMzB,aAAa,CAACC,MAAO,aAAc1C,MAAO2I,KA9BvDvG,EAAK8F,MAAQ,CACVO,YAAY,GAJErG,wEAmCV,IAAAuE,EAAA7G,KACC2I,EAAa3I,KAAKoI,MAAMO,WAAa,OAAS,GAC9CM,EAAS,OAASjJ,KAAKoI,MAAMO,WAAa,cAAgB,iBACxDE,EAAe7I,KAAKoE,MAApByE,WACR,OACIhE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,UACCG,KAAK,SACLF,UAAU,qCACVe,QAAS/F,KAAK0I,wBACX7D,EAAAC,EAAAC,cAAA,KAAIM,MAAOmD,EAAYxD,UAAW,QAAUiE,IAJhD,4JAMIpE,EAAAC,EAAAC,cAAA,KAAIM,MAAOmD,EAAYxD,UAAW,QAAUiE,MAGpDpE,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uCAAyC2D,GACpDE,EAAW/B,IAAI,SAACnD,GACb,OACIkB,EAAAC,EAAAC,cAACmE,EAAD,CACCnC,IAAKpD,EAAK9D,GACV8D,KAAMA,EACNgE,gBAAiBd,EAAKD,mCA1DhBX,aCJdkD,mLACV,IAAAzE,EAC0D1E,KAAKoE,MAA/DgF,EADA1E,EACA0E,QAASC,EADT3E,EACS2E,QAASzI,EADlB8D,EACkB9D,OAAQgB,EAD1B8C,EAC0B9C,OAAQoB,EADlC0B,EACkC1B,KAAM4B,EADxCF,EACwCE,eAC/C,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAcoE,EAA5B,QACAvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iEAAwCJ,EAAxC,MACAC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,oNAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAcqE,EAA5B,QACAxE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,8CAAqCpD,EAAM,iBAAAH,OAAUP,EAAcU,GAAxB,KAAqC,IAChFiD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,yOAAuEhC,EAAvE,gCAGJ6B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAcpE,EAA5B,QACAiE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,mCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sGAA6CpD,EAAM,iBAAAH,OAAUP,EAAcU,GAAxB,KAAqC,GAAxF,eAvBqBqE,aCD7B7F,EAAQ,IAAIC,KACdiJ,EAAW,IAAIjJ,KACnBiJ,EAASC,QAAQnJ,EAAMgB,UAAY,OACdoI,EACjB,SAAAA,IAAgB1J,OAAAC,EAAA,EAAAD,CAAAE,KAAAwJ,GACZxJ,KAAKyJ,UAAW,EAChBzJ,KAAK2E,OAAS,EACd3E,KAAK2B,SAAWvB,EAChBJ,KAAK4B,OAAS0H,EACdtJ,KAAKgD,KAAO,EACZhD,KAAK4E,eAAiB,GACtB5E,KAAKqG,eAAiB,CAAE,IAAIH,EAAc9F,EAAMU,YAChDd,KAAK6I,WAAa,CAAE,IAAIvI,EAAUF,EAAMU,UAAWV,GAAQ,IAAIE,EAAUgJ,EAASxI,UAAWwI,IAC7FtJ,KAAK0J,MAAQ,CACTN,QAAS,EACTC,QAAS,EACTzI,OAAQ,IC2JL+I,cAnKb,SAAAA,EAAYvF,GAAO,IAAA9B,EAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2J,IACjBrH,EAAAxC,OAAAuE,EAAA,EAAAvE,CAAAE,KAAAF,OAAAwE,EAAA,EAAAxE,CAAA6J,GAAApF,KAAAvE,KAAMoE,KAKRwF,kBAAoB,WAClB,IAAMC,EAAaC,aAAaC,QAAQ,WAClCC,EAAc,SAACnI,GACnBS,EAAK+F,SAAS,CAACoB,UAAU,IACzBQ,WAAW,WACT3H,EAAK+F,SAAS,CAACoB,UAAU,KACxB5H,IAGL,GAAIgI,EAAY,CACd,IAAIK,EAASC,KAAKC,MAAMP,GACxBK,EAAOvI,SAAWuI,EAAOvI,SAAW,IAAItB,KAAK6J,EAAOvI,UAAY,KAChEuI,EAAOtI,OAASsI,EAAOtI,OAAS,IAAIvB,KAAK6J,EAAOtI,QAAU,KAC1DsI,EAAOrB,WAAaqB,EAAOrB,WAAW/B,IAAI,SAACH,GAEzC,OADAA,EAAGpG,KAAO,IAAIF,KAAKsG,EAAGpG,MACfoG,IAETrE,EAAK+F,SAAU6B,GACfF,EAAY,WAEZA,EAAY,MA1BG1H,EA8BnB+H,cAAgB,SAACC,GACfhI,EAAK+F,SAALvI,OAAAyK,EAAA,EAAAzK,CAAA,GAAgBwK,EAAK1H,MAAQ0H,EAAKpK,OAAQ,WACxCF,KAAKwK,kBAhCUlI,EAoCnBmI,cAAgB,SAACH,GACfR,aAAaY,QAAQ,UAAWP,KAAKQ,UAAUL,KArC9BhI,EAwCnBsI,wBAA0B,WACxBtI,EAAK+F,SAAU,IAAImB,EAAmB,WACpCxJ,KAAKwK,kBA1CUlI,EA8CnBkI,aAAe,WAEb,IAQI7F,EAASrC,EAAK8F,MAAMzD,OACpB3B,EAAOV,EAAK8F,MAAMpF,KAClBqD,EAAcvG,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8F,MAAM/B,gBAChCwC,EAAU/I,OAAAwG,EAAA,EAAAxG,CAAOwC,EAAK8F,MAAMS,YAC1BjE,EAAiBtC,EAAK8F,MAAMxD,eAAiB,IAC/C8E,EAAQpH,EAAK8F,MAAMsB,MACnBmB,EAduB,SAACxE,GAK1B,OAJaA,EAAe0C,OAC1B,SAAC+B,EAAaC,GAAd,OAA+BD,EAAcC,EAAa7K,OAC1D,GAWgB8K,CAAmB3E,GAGvCqD,EAAMN,QAAU3G,SAASkC,EAASC,EAAgB,KAAO,EACzD8E,EAAML,QAAU5G,SAASkC,EAAS+E,EAAMN,QAAS,IAAMyB,GAAiB,EACxEnB,EAAM9I,OAAS6B,SAASiH,EAAML,QAAUrG,EAAM,KAAO,EAGrD6F,EAAavG,EAAK2I,kBAAkBpC,EAAYa,EAAM9I,QAEtD0B,EAAK+F,SAAS,CAACqB,QAAOb,cAAa,WACjC7I,KAAKyK,cAAczK,KAAKoI,QACxB8C,KAFiCpL,OAAAqL,EAAA,EAAArL,CAAAwC,MAxElBA,EA6EnB2I,kBAAoB,SAACpC,EAAYjI,GAiB/B,OAhBoBiI,EAAWE,OAC7B,SAAU+B,EAAaC,EAActH,GAWjC,OAVFsH,EAAanK,OAASA,EACR,IAAV6C,GACFsH,EAAarK,UAAYE,EAASmK,EAAavK,QAC/CuK,EAAapK,MAAQoK,EAAarK,YAGlCqK,EAAarK,UAAYE,EAASmK,EAAavK,QAC/CuK,EAAapK,MAAQoK,EAAarK,UAAYmI,EAAWpF,EAAQ,GAAG9C,OAEpEmK,EAAYlH,KAAKmH,GACVD,GACN,KAxFPxI,EAAK8F,MAAQ,IAAIoB,EAHAlH,wEAiGV,IACAmH,EAAYzJ,KAAKoI,MAAjBqB,SACP,OACI5E,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBAEdyE,GACD5E,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACCC,UAAU,0EACVK,MAAO,CAAC+F,OAAQ,SAEfvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiBnF,GAAG,YAC/BgF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBK,MAAO,CAACgG,UAAW,WAAvD,oDAGAxG,EAAAC,EAAAC,cAAA,OAAKlF,GAAG,cAMhB4J,GACA5E,EAAAC,EAAAC,cAACuG,EAAD,CACC3G,OAAQ3E,KAAKoI,MAAMzD,OACnBhD,SAAU3B,KAAKoI,MAAMzG,SACrBC,OAAQ5B,KAAKoI,MAAMxG,OACnBiH,WAAY7I,KAAKoI,MAAMS,WACvBjE,eAAgB5E,KAAKoI,MAAMxD,eAC3BjC,aAAc3C,KAAKqK,gBAGpBZ,GACA5E,EAAAC,EAAAC,cAACwG,EAAD,CACClF,eAAgBrG,KAAKoI,MAAM/B,eAC3B1D,aAAc3C,KAAKqK,gBAGpBZ,GACA5E,EAAAC,EAAAC,cAACyG,EAAD,CACC3C,WAAY7I,KAAKoI,MAAMS,WACvBlG,aAAc3C,KAAKqK,gBAGpBZ,GACA5E,EAAAC,EAAAC,cAAC0G,EAAD,CACCrC,QAASpJ,KAAKoI,MAAMsB,MAAMN,QAC1BC,QAASrJ,KAAKoI,MAAMsB,MAAML,QAC1BzI,OAAQZ,KAAKoI,MAAMsB,MAAM9I,OACzBe,SAAU3B,KAAKoI,MAAMzG,SACrBC,OAAQ5B,KAAKoI,MAAMxG,OACnBoB,KAAMhD,KAAKoI,MAAMpF,KACjB4B,eAAgB5E,KAAKoI,MAAMxD,iBAG5B6E,GACA5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,UACCC,UAAU,yBACVe,QAAS/F,KAAK4K,yBAFf,6DA3JO3E,aCiBNyF,cAnBb,SAAAA,EAAYtH,GAAO,IAAA9B,EAAA,OAAAxC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0L,IACjBpJ,EAAAxC,OAAAuE,EAAA,EAAAvE,CAAAE,KAAAF,OAAAwE,EAAA,EAAAxE,CAAA4L,GAAAnH,KAAAvE,KAAMoE,KACDgE,MAAQ,GAFI9F,wEAMjB,OACEuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oFAEAH,EAAAC,EAAAC,cAAC4G,EAAD,MACF9G,EAAAC,EAAAC,cAAA,uBAbUkB,aCME2F,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d293a44a.chunk.js","sourcesContent":["export default class DaySpending {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n        this.isloss = true;\r\n    }\r\n}","\r\nimport DaySpending from \"./DaySpending\";\r\n\r\nconst today = new Date();\r\nexport default class DailyCost {\r\n    constructor( id, date ) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.spended = 0;\r\n        this.comment = \"\";\r\n        this.available = 0;\r\n        this.saved = 0;\r\n        this.budget = 0;\r\n\r\n        this.spending = [ new DaySpending(today.getTime()) ];\r\n    }\r\n}","const _addZero = function(value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n};\r\nexport const transformDate = (date) => {\r\n    date = new Date(date);\r\n    const currDate = _addZero(date.getDate());\r\n    const currMonth = _addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`${currDate}.${currMonth}.${currYear}`);\r\n};\r\nexport const calcDay = (time) => {\r\n    const day = Math.ceil(time / (1000 * 3600 * 24));\r\n    return day;\r\n}\r\nexport const calcDaysDifference = (startDay, endDay) => {\r\n    const timeDifference = Math.abs(endDay.getTime() - startDay.getTime());\r\n    const days = calcDay(timeDifference);\r\n    return days;\r\n};\r\n\r\n/*  transformDate = (date) => {\r\n        date = new Date(date);\r\n        const currDate = this._addZero(date.getDate());\r\n        const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n        const currYear = date.getFullYear().toString();\r\n        return (`${currDate}.${currMonth}.${currYear}`);\r\n    }; */\r\n\r\n/*   transformDate = (endDay, days) => {\r\n    // console.log(\"Transform Date\");\r\n    let date = new Date(endDay);\r\n    // date.setDate(date.getDate() + days);\r\n    const currDate = this._addZero(date.getDate());\r\n    const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  }; */","import DailyCost from \"../model/DailyCost\";\r\nimport { calcDaysDifference } from \"../utils/Date\";\r\n\r\nexport default class IncomeController {\r\n    constructor(getProps, startDatePick, endDatePick) {\r\n        this.getProps = getProps;\r\n        // this.writeToStateFunc = writeToState;\r\n        this.startDatePick = startDatePick;\r\n        this.endDatePick = endDatePick;\r\n    }\r\n    // Income\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    value = value || 0;\r\n    this.getProps().writeToState({field: \"income\", value: value});\r\n  }\r\n  // Select input\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    this.getProps().writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  // Calendar\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    const endDay = this.getProps().endDay;\r\n    value.setHours(0,0,0,0);\r\n    endDay.setHours(0,0,0,0);\r\n    const startDayTime = value.getTime();\r\n    const endDayTime = endDay.getTime();\r\n    if (startDayTime > endDayTime) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(value, endDay) + 1; //If start & end dates same => +1 (not 0)\r\n    this.getProps().writeToState({field: \"days\", value: days});\r\n    this.getProps().writeToState({field: \"startDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(value, endDay, days);\r\n  }\r\n  handleEndDaySelect = (value) => {\r\n    value = value || null;\r\n    const startDay = this.getProps().startDay;\r\n    console.log(this.getProps(), startDay);\r\n    value.setHours(0,0,0,0);\r\n    startDay.setHours(0,0,0,0);\r\n    const startDayTime = startDay.getTime();\r\n    const endDayTime = value.getTime();\r\n    if (startDayTime > endDayTime) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(startDay, value) + 1; //If start & end dates same =>  +1 (not 0)\r\n    this.getProps().writeToState({field: \"days\", value: days});\r\n    this.getProps().writeToState({field: \"endDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(startDay, value, days);\r\n  }\r\n\r\n  _updateDailyCosts = (startDay, endDay, days) => {\r\n    // const dailyCosts = this.getProps().dailyCosts;\r\n    const newDailyCosts = [];\r\n    const day = startDay.getDate();\r\n    const month = startDay.getMonth();\r\n    const year = startDay.getFullYear();\r\n    for (let index = 0; index < days; index++) {\r\n      let date = new Date(year, month, day + index);\r\n      // date.setDate(startDay.getDate() + index);\r\n      const dateTime = date.getTime();\r\n      const cost = new DailyCost(dateTime/*id*/, date);\r\n      newDailyCosts.push( cost );\r\n    }\r\n    this.getProps().writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  }\r\n    handleClickCalendarIcon = (event) => {\r\n        console.log(\"this: \", this);\r\n        const name = event.currentTarget.attributes.name.value;\r\n        if (name === \"SD\") {\r\n            this.startDatePick.current.onInputClick();\r\n        } else { //ED\r\n            this.endDatePick.current.onInputClick();\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\n// import DailyCost from \"../model/DailyCost\";\r\n// import { calcDaysDifference } from \"../utils/Date\";\r\nimport IncomeController from \"../controllers/IncomeController\";\r\n\r\nexport default class Income extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startDatePick = React.createRef();\r\n    this.endDatePick = React.createRef();\r\n    /* !New */\r\n    this.IncomeController = new IncomeController(this.getProps, this.startDatePick, this.endDatePick);\r\n  }\r\n  getProps = () => {\r\n    return this.props;\r\n  }\r\n  // // Income\r\n  // handleChangeIncome = (event) => {\r\n  //   let value = parseInt( event.target.value, 10 ) || '';\r\n  //   value = value || 0;\r\n  //   this.props.writeToState({field: \"income\", value: value});\r\n  // }\r\n  // // Select input\r\n  // percentStorageSelect = (event) => {\r\n  //   let value = parseInt( event.target.value, 10 );\r\n  //   this.props.writeToState({field: \"percentStorage\", value: value});\r\n  // }\r\n  // // Calendar\r\n  // handleStartDaySelect = (value) => {\r\n  //   value = value || null;\r\n  //   const endDay = this.props.endDay;\r\n  //   value.setHours(0,0,0,0);\r\n  //   endDay.setHours(0,0,0,0);\r\n  //   if (value.getTime() > endDay.getTime()) {\r\n  //     return;\r\n  //   }\r\n  //   const days = calcDaysDifference(value, endDay) + 1; //If start & end dates same => +1 (not 0)\r\n  //   this.props.writeToState({field: \"days\", value: days});\r\n  //   this.props.writeToState({field: \"startDay\", value: value});\r\n\r\n  //   // Update detail daily cost block\r\n  //   this._updateDailyCosts(value, endDay, days);\r\n  // }\r\n  // handleEndDaySelect = (value) => {\r\n  //   value = value || null;\r\n  //   const startDay = this.props.startDay;\r\n  //   value.setHours(0,0,0,0);\r\n  //   startDay.setHours(0,0,0,0);\r\n  //   if (startDay.getTime() > value.getTime()) {\r\n  //     return;\r\n  //   }\r\n  //   const days = calcDaysDifference(startDay, value) + 1; //If start & end dates same =>  +1 (not 0)\r\n  //   this.props.writeToState({field: \"days\", value: days});\r\n  //   this.props.writeToState({field: \"endDay\", value: value});\r\n\r\n  //   // Update detail daily cost block\r\n  //   this._updateDailyCosts(startDay, value, days);\r\n  // }\r\n\r\n  // _updateDailyCosts = (startDay, endDay, days) => {\r\n  //   // const dailyCosts = this.props.dailyCosts;\r\n  //   const newDailyCosts = [];\r\n  //   for (let index = 0; index < days; index++) {\r\n  //     let date = new Date();\r\n  //     date.setDate(startDay.getDate() + index);\r\n  //     const cost = new DailyCost(date.getTime()/*id*/, date);\r\n  //     newDailyCosts.push( cost );\r\n  //   }\r\n  //   this.props.writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  // }\r\n\r\n  // handleClickCalendarIcon = (event) => {\r\n  //   const name = event.currentTarget.attributes.name.value;\r\n  //   if (name === \"SD\") {\r\n  //     this.startDatePick.current.onInputClick();\r\n  //   } else { //ED\r\n  //     this.endDatePick.current.onInputClick();\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      endDay,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.IncomeController.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.IncomeController.startDatePick}\r\n                 selected={startDay}\r\n                 onChange={this.IncomeController.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} name=\"SD\" className=\"input-group-text justify-content-center\" onClick={this.IncomeController.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата окончания:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.IncomeController.endDatePick}\r\n                 selected={endDay}\r\n                 onChange={this.IncomeController.handleEndDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату окончания\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} name=\"ED\" className=\"input-group-text justify-content-center\" onClick={this.IncomeController.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.IncomeController.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"35\">35</option>\r\n                  <option value=\"40\">40</option>\r\n                  <option value=\"45\">45</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class MandatoryCost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MandatoryCost from '../model/MandatoryCosts';\r\n\r\nexport default class Operation extends Component {\r\n\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const mandatoryCosts = [...this.props.mandatoryCosts];\r\n    // mandatoryCosts.unshift( new MandatoryCost(new Date().getTime()) );\r\n    mandatoryCosts.push( new MandatoryCost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts = mandatoryCosts.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        mandatoryCosts\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-primary mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {mandatoryCosts.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group m-0 mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../../utils/Date\";\r\n\r\nexport default class Display extends Component {\r\n    isToday = (date) => {\r\n        const today = new Date();\r\n        // console.log(date, today);\r\n        return date.getDate() === today.getDate() &&\r\n          date.getMonth() === today.getMonth() &&\r\n          date.getFullYear() === today.getFullYear();\r\n    }\r\n\r\n    render() {\r\n        const {cost, switchEditMode} = this.props;\r\n        const dayTime = cost.date.getTime();\r\n        const todayDate = new Date();\r\n        const todayTime = todayDate.getTime();\r\n        const bToday = this.isToday(cost.date);\r\n        return (\r\n            <div className=\"card-body row\">\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <h5 className=\"card-title\">\r\n                        {cost.date\r\n                            ? transformDate(cost.date) + (bToday ? \" (Сегодня)\" : \"\")\r\n                            : \"\"}\r\n                    </h5>\r\n                    <div>\r\n                       <span className=\"card-text\">Траты: {(cost.spended < 0) ? \"0\" : cost.spended } руб.</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"card-text\">{cost.comment}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-4\"></div>\r\n                <div className=\"col-12 col-lg-3 d-flex flex-column justify-content-end align-items-end\">\r\n                    <div className=\"d-flex flex-column flex-grow-1 w-100\">\r\n                        <h6 className=\"card-title\">Дневной бюджет: {cost.budget} руб.</h6>\r\n                        <h6 className=\"card-title\">Остаток на сегодня: {cost.available} руб.</h6>\r\n                        { (dayTime < todayTime) &&\r\n                            <span>\r\n                                <h6 className=\"card-title mb-0\">Сэкономлено: {cost.saved} руб.</h6>\r\n                                <h6 className=\"card-title font-weight-normal\"><i>(С учётом остатка за предыдущий день)</i></h6>\r\n                            </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-1 d-flex align-items-center justify-content-end\">\r\n                    <button className=\"btn btn-secondary border border-success w-100\" onClick={switchEditMode} >\r\n                        <i className=\"fa fa-pencil\" />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport DaySpending from \"../../model/DaySpending\";\r\nimport {transformDate} from \"../../utils/Date\";\r\n\r\nexport default class Edit extends Component {\r\n    addNewSpend = () => {\r\n        const {cost} = this.props;\r\n        let spending = [...cost.spending];\r\n        // mandatoryCosts.unshift( new MandatoryCost(new Date().getTime()) );\r\n        spending.push( new DaySpending(new Date().getTime()) );\r\n        this.props.changeCostValue(cost.id, spending);\r\n    }\r\n\r\n    deleteSpend = (event) => {\r\n        const id = +event.target.id;\r\n        // const {state} = this.props;\r\n        const {cost} = this.props;\r\n        let spending = [...cost.spending];\r\n        spending = spending.filter((spend) => {\r\n          return spend.id !== id;\r\n        });\r\n        this.props.changeCostValue(cost.id, spending);\r\n    }\r\n    handleChangeSpendValue = (event) => {\r\n        // event.preventDefault();\r\n        const {cost} = this.props;\r\n        const spending = [...cost.spending];\r\n\r\n        const { id, name } = event.currentTarget;\r\n        const callback = (el, index) => {\r\n            return +el.id === +id;\r\n        };\r\n        let spendIndex = spending.findIndex(callback);\r\n\r\n        let value;\r\n        switch (name) {\r\n            case \"value\":\r\n                value = parseInt(event.target.value, 10) || '';\r\n                value = value || 0;\r\n                break;\r\n            case \"isloss\":\r\n                // value = this.state.isLoss;\r\n                value = !spending[spendIndex].isloss;\r\n                break;\r\n            case \"comment\":\r\n            default:\r\n                value = event.target.value;\r\n                break;\r\n        }\r\n        spending[spendIndex][name] = value;\r\n\r\n        this.props.changeCostValue(cost.id, spending);\r\n    }\r\n\r\n    render() {\r\n        const {cost, switchEditMode, changeCostValue} = this.props;\r\n        const dayTime = cost.date.getTime();\r\n        const todayDate = new Date();\r\n        const todayTime = todayDate.getTime();\r\n        // console.log(this.props.dayKey);\r\n        return (\r\n            <div className=\"card-body row\">\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <h5 className=\"card-title\">{cost.date ? transformDate(cost.date) : \"\"}</h5>\r\n                    <div>\r\n                       <span className=\"card-text\">Траты: {(cost.spended < 0) ? \"0\" : cost.spended } руб.</span>\r\n                    </div>\r\n                    <div>\r\n                        <span className=\"card-text\">{cost.comment}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <h6 className=\"card-title mb-3\">Внесите доходы/расходы</h6>\r\n                    { cost.spending.map((spend) => {\r\n                        return (\r\n                            <div key={spend.id}>\r\n                                <div  className=\"input-group-sm d-flex m-0 mb-2\">\r\n                                    <div className=\"input-group-prepend\">\r\n                                        <button id={spend.id} name=\"isloss\" className=\"btn btn-warning\" onClick={this.handleChangeSpendValue} >\r\n                                            { spend.isloss\r\n                                                ? <i className=\"fa fa-minus\" alt=\"В минус\" />\r\n                                                : <i className=\"fa fa-plus\" alt=\"В плюс\" />\r\n                                            }\r\n                                        </button>\r\n                                    </div>\r\n                                    <input\r\n                                      id={spend.id}\r\n                                     type=\"text\"\r\n                                     name=\"value\"\r\n                                     className=\"form-control\"\r\n                                     onChange={this.handleChangeSpendValue}\r\n                                     value={spend.value}\r\n                                     placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                                    <input\r\n                                      id={spend.id}\r\n                                     type=\"text\"\r\n                                     name=\"text\"\r\n                                     className=\"form-control\"\r\n                                     onChange={this.handleChangeSpendValue}\r\n                                     value={spend.text}\r\n                                     placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                                    <div className=\"input-group-append\" id=\"button-addon4\">\r\n                                      {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                                      <button\r\n                                       id={spend.id}\r\n                                       onClick={this.deleteSpend}\r\n                                       className=\"border-left btn btn-dark\"\r\n                                       type=\"button\">x</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    }) }\r\n\r\n                    <div className=\"d-flex mt-2 justify-content-end\">\r\n                      <button type=\"button\" className=\"text-right btn-sm btn-light\" onClick={ this.addNewSpend } >Добавить</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-3 d-flex flex-column justify-content-end align-items-end\">\r\n                    <div className=\"d-flex flex-column flex-grow-1 w-100\">\r\n                        <h6 className=\"card-title\">Дневной бюджет: {cost.budget} руб.</h6>\r\n                        <h6 className=\"card-title\">Остаток на сегодня: {cost.available} руб.</h6>\r\n                        { (todayTime < dayTime) &&\r\n                            <span>\r\n                                <h6 className=\"card-title mb-0\">Сэкономлено: {cost.saved} руб.</h6>\r\n                                <h6 className=\"card-title font-weight-normal\"><i>(С учётом остатка за предыдущий день)</i></h6>\r\n                            </span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-1 d-flex align-items-center justify-content-end\">\r\n                    <button className=\"btn btn-secondary border border-success w-100\" onClick={switchEditMode} ><i className=\"fa fa-check\" /></button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../css/Day.css';\r\n// import { transformDate } from \"../../utils/Date\";\r\nimport Display from \"./Display\";\r\nimport Edit from \"./Edit\";\r\n\r\nexport default class Day extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        editMode: false\r\n      };\r\n    }\r\n\r\n    switchEditMode = () => {\r\n        const { editMode } = this.state;\r\n        this.setState({editMode: !editMode});\r\n    }\r\n\r\n    // // Income\r\n    // handleChangeIncome = (event) => {\r\n    //     let value = parseInt( event.target.value, 10 ) || '';\r\n    //     value = value || 0;\r\n    //     this.props.writeToState({field: \"income\", value: value});\r\n    // }\r\n    // handleChange = (e) => {\r\n    //     const { id, value } = e.currentTarget;\r\n    //     this.setState({ [id]: value });\r\n    // }\r\n\r\n    render() {\r\n        const {editMode} = this.state;\r\n        const {cost, changeCostValue} = this.props;\r\n        return (\r\n            <div className={\"day card bg-secondary mb-1 \" + (editMode ? \"day-selected\" : \"\")}>\r\n                { editMode\r\n                    ? <Edit changeCostValue={changeCostValue} cost={cost} switchEditMode={this.switchEditMode} />\r\n                    : <Display cost={cost} switchEditMode={this.switchEditMode} /> }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Daily.css';\r\nimport Day from './day/Day';\r\n\r\nconst iconStyle = {\r\n    width: \"0.8rem\",\r\n    cursor: \"pointer\"\r\n};\r\nexport default class Daily extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         showDetail: true\r\n      };\r\n    }\r\n    handleSwitchDetailShow = () => {\r\n        this.setState({ showDetail: !this.state.showDetail });\r\n    }\r\n    handleChangeCostValue = (costId, spending) => {\r\n        const dailyCosts = [...this.props.dailyCosts];\r\n        // const { id, name } = event.currentTarget;\r\n        // let value;\r\n        // switch (name) {\r\n        //     case \"spended\":\r\n        //         value = parseInt( event.target.value, 10 ) || '';\r\n        //         value = value || 0;\r\n        //         break;\r\n        //     case \"comment\":\r\n        //     default:\r\n        //         value = event.target.value;\r\n        //         break;\r\n        // }\r\n        const callback = (el, index) => {\r\n            return +el.id === +costId;\r\n        };\r\n        let costIndex = dailyCosts.findIndex(callback);\r\n        dailyCosts[costIndex].spending = spending;\r\n        dailyCosts[costIndex].spended = spending.reduce((sum, el)=>{ \r\n            return el.isloss ? sum + el.value : sum - el.value;\r\n        }, 0);\r\n        // console.log(costId, spending)\r\n        this.props.writeToState({field: \"dailyCosts\", value: dailyCosts});\r\n    }\r\n    render() {\r\n        const showDetail = this.state.showDetail ? 'show' : '';\r\n        const btnVis = \"fa \" + (this.state.showDetail ? \"fa-arrow-up\" : \"fa-arrow-down\");\r\n        const { dailyCosts } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                    <button\r\n                     type=\"button\"\r\n                     className=\" w-100 text-center btn btn-primary\"\r\n                     onClick={this.handleSwitchDetailShow} >\r\n                        <i  style={iconStyle}  className={\"mr-4 \" + btnVis} />\r\n                        Детализация расходов по дням\r\n                        <i  style={iconStyle}  className={\"ml-4 \" + btnVis} />\r\n                    </button>\r\n                </div>\r\n                <div className={\"daily text-white bg-primary collapse\" + showDetail} >\r\n                    {dailyCosts.map((cost)=>{\r\n                        return (\r\n                            <Day\r\n                             key={cost.id}\r\n                             cost={cost}\r\n                             changeCostValue={this.handleChangeCostValue} />\r\n                        );\r\n                      })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\n// const Total = (props) => {\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget, endDay, days, percentStorage} = this.props;\r\n    return (\r\n        <div className=\"mt-2 text-white card-group text-center\">\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n              <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">Остаток {endDay ? `(до ${transformDate(endDay)})` : \"\"}</h5>\r\n              <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">в день</h5>\r\n              <p className=\"card-text\">Ежедневный бюджет  {endDay ? `(до ${transformDate(endDay)})` : \"\"}.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )};\r\n  };\r\n\r\n// export default Total;\r\n","import MandatoryCost from \"./MandatoryCosts\";\r\nimport DailyCost from \"./DailyCost\";\r\n\r\nconst today = new Date();\r\nlet tomorrow = new Date();\r\ntomorrow.setDate(today.getDate() + 1);\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.isLoaded = true;\r\n        this.income = 0;\r\n        this.startDay = today;\r\n        this.endDay = tomorrow;\r\n        this.days = 2;\r\n        this.percentStorage = 10;\r\n        this.mandatoryCosts = [ new MandatoryCost(today.getTime()) ];\r\n        this.dailyCosts = [ new DailyCost(today.getTime(), today), new DailyCost(tomorrow.getTime(), tomorrow) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Daily from './Daily';\r\nimport Total from './Total';\r\n// import MandatoryCosts from '../model/MandatoryCosts';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = new AppInitialState();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    const loadIndFunc = (time) => {\r\n      this.setState({isLoaded: false});\r\n      setTimeout(() => {\r\n        this.setState({isLoaded: true});\r\n      }, time);\r\n    };\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      parsed.endDay = parsed.endDay ? new Date(parsed.endDay) : null;\r\n      parsed.dailyCosts = parsed.dailyCosts.map((el) => {\r\n        el.date = new Date(el.date);\r\n        return el;\r\n      });\r\n      this.setState( parsed );\r\n      loadIndFunc(1200);\r\n    } else {\r\n      loadIndFunc(3000);\r\n    }\r\n  }\r\n  // Write to state and storage functions\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _updateTotal = () => {\r\n    // TODO: Add switcher for fields and update only used branches\r\n    const _countRequiredCost = (mandatoryCosts) => {\r\n      let result = mandatoryCosts.reduce(\r\n        (accumulator, currentValue) => accumulator + currentValue.value,\r\n        0\r\n      );\r\n      return result;\r\n    };\r\n\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let mandatoryCosts = [...this.state.mandatoryCosts];\r\n    let dailyCosts = [...this.state.dailyCosts];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = _countRequiredCost(mandatoryCosts);\r\n\r\n    // Calc Total info\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    // Calc Daily info\r\n    dailyCosts = this._reCalcDailyCosts(dailyCosts, total.budget);\r\n\r\n    this.setState({total, dailyCosts}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n\r\n  _reCalcDailyCosts = (dailyCosts, budget) => {\r\n    let newDailyCosts = dailyCosts.reduce(\r\n      function (accumulator, currentValue, index) {\r\n        currentValue.budget = budget;\r\n        if (index === 0) {\r\n          currentValue.available = budget - currentValue.spended;\r\n          currentValue.saved = currentValue.available;//currentValue.available - currentValue.spended;\r\n        } else {\r\n          // currentValue.available = dailyCosts[index - 1].available - currentValue.spended;\r\n          currentValue.available = budget - currentValue.spended; //+ dailyCosts[index - 1].saved;\r\n          currentValue.saved = currentValue.available + dailyCosts[index - 1].saved;// - currentValue.spended;\r\n        }\r\n          accumulator.push(currentValue);\r\n          return accumulator;\r\n        }, []\r\n    );\r\n    // console.log(newDailyCosts);\r\n    return newDailyCosts;\r\n  }\r\n\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {\r\n            !isLoaded &&\r\n            <div>\r\n              <div\r\n               className=\"d-flex flex-column justify-content-center align-items-center text-white\"\r\n               style={{height: \"85vh\"}}>\r\n                {/* <div className=\"cm-spinner\"></div> */}\r\n                <div className=\"loader-wrapper\" id=\"loader-1\">\r\n                    <h3 className=\"font-weight-lighter\" style={{textAlign: \"Center\"/* , margin: \"20px\" */}} >\r\n                      Загрузка\r\n                    </h3>\r\n                    <div id=\"loader\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             dailyCosts={this.state.dailyCosts}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             mandatoryCosts={this.state.mandatoryCosts}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Daily\r\n             dailyCosts={this.state.dailyCosts}\r\n             writeToState={this._writeToState} ></Daily>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <div className=\"m-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n          }\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './css/App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './css/custom.css';\nimport './css/index.css';\nimport './css/loadIndicators.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}