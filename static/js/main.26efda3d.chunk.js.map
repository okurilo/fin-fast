{"version":3,"sources":["model/DailyCost.js","utils/Date.js","controllers/IncomeController.js","components/Income.js","model/MandatoryCosts.js","components/Operation.js","components/Day.js","components/Daily.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["DailyCost","id","date","Object","classCallCheck","this","spended","comment","available","saved","budget","_addZero","value","toString","length","transformDate","Date","currDate","getDate","currMonth","getMonth","currYear","getFullYear","concat","calcDaysDifference","startDay","endDay","time","timeDifference","Math","abs","getTime","ceil","IncomeController","props","startDatePick","endDatePick","_this","handleChangeIncome","event","parseInt","target","writeToState","field","percentStorageSelect","handleStartDaySelect","setHours","days","_updateDailyCosts","handleEndDaySelect","newDailyCosts","index","setDate","dateTime","cost","push","handleClickCalendarIcon","console","log","currentTarget","attributes","name","current","onInputClick","Income","possibleConstructorReturn","getPrototypeOf","call","React","createRef","_this$props","income","percentStorage","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","style","width","es","ref","selected","dateFormat","placeholderText","locale","ru","cursor","onClick","alt","Component","MandatoryCost","text","Operation","addNewCost","mandatoryCosts","toConsumableArray","deleteCost","filter","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","Day","switchEditMode","editMode","state","setState","changeCostValue","iconStyle","Daily","handleSwitchDetailShow","showDetail","dailyCosts","_event$currentTarget","costIndex","findIndex","btnVis","Day_Day","Total","storage","balance","today","tomorrow","AppInitialState","isLoaded","total","Budget","componentDidMount","cachedHits","localStorage","getItem","loadIndFunc","setTimeout","parsed","JSON","parse","_writeToState","data","defineProperty","_updateTotal","_writeToLocal","setItem","stringify","handleClearStateStorage","requiredCosts","reduce","accumulator","currentValue","_countRequiredCost","_reCalcDailyCosts","bind","assertThisInitialized","height","textAlign","Income_Income","Operation_Operation","Daily_Daily","Total_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"waAAqBA,EACjB,SAAAA,EAAaC,EAAIC,GAAQC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,GACrBK,KAAKJ,GAAKA,EACVI,KAAKH,KAAOA,EACZG,KAAKC,QAAU,EACfD,KAAKE,QAAU,GACfF,KAAKG,UAAY,EACjBH,KAAKI,MAAQ,EACbJ,KAAKK,OAAS,GCRhBC,EAAW,SAASC,GAKtB,OAHqB,KADrBA,EAAQA,EAAMC,YAAc,IAClBC,SACNF,EAAQ,IAAMA,GAEXA,GAEEG,EAAgB,SAACb,GAC1BA,EAAO,IAAIc,KAAKd,GAChB,IAAMe,EAAWN,EAAST,EAAKgB,WACzBC,EAAYR,EAAST,EAAKkB,WAAa,GACvCC,EAAWnB,EAAKoB,cAAcT,WACpC,SAAAU,OAAWN,EAAX,KAAAM,OAAuBJ,EAAvB,KAAAI,OAAoCF,IAM3BG,EAAqB,SAACC,EAAUC,GACzC,IALoBC,EAKdC,EAAiBC,KAAKC,IAAIJ,EAAOK,UAAYN,EAASM,WAE5D,OAPoBJ,EAMCC,EALTC,KAAKG,KAAKL,EAAI,QCZTM,EACjB,SAAAA,EAAYC,EAAOC,EAAeC,GAAa,IAAAC,EAAAhC,KAAAF,OAAAC,EAAA,EAAAD,CAAAE,KAAA4B,GAAA5B,KAOjDiC,mBAAqB,SAACC,GACpB,IAAI3B,EAAQ4B,SAAUD,EAAME,OAAO7B,MAAO,KAAQ,GAClDA,EAAQA,GAAS,EACjByB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,SAAU/B,MAAOA,KAVFP,KAajDuC,qBAAuB,SAACL,GACtB,IAAI3B,EAAQ4B,SAAUD,EAAME,OAAO7B,MAAO,IAC1CyB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,iBAAkB/B,MAAOA,KAfVP,KAkBjDwC,qBAAuB,SAACjC,GACtBA,EAAQA,GAAS,KACjB,IAAMc,EAASW,EAAKH,MAAMR,OAK1B,GAJAd,EAAMkC,SAAS,EAAE,EAAE,EAAE,GACrBpB,EAAOoB,SAAS,EAAE,EAAE,EAAE,KACDlC,EAAMmB,UACRL,EAAOK,WAC1B,CAGA,IAAMgB,EAAOvB,EAAmBZ,EAAOc,GAAU,EACjDW,EAAKH,MAAMQ,aAAa,CAACC,MAAO,OAAQ/B,MAAOmC,IAC/CV,EAAKH,MAAMQ,aAAa,CAACC,MAAO,WAAY/B,MAAOA,IAGnDyB,EAAKW,kBAAkBpC,EAAOc,EAAQqB,KAjCS1C,KAmCjD4C,mBAAqB,SAACrC,GACpBA,EAAQA,GAAS,KACjB,IAAMa,EAAWY,EAAKH,MAAMT,SAK5B,GAJAb,EAAMkC,SAAS,EAAE,EAAE,EAAE,GACrBrB,EAASqB,SAAS,EAAE,EAAE,EAAE,KACHrB,EAASM,UACXnB,EAAMmB,WACzB,CAGA,IAAMgB,EAAOvB,EAAmBC,EAAUb,GAAS,EACnDyB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,OAAQ/B,MAAOmC,IAC/CV,EAAKH,MAAMQ,aAAa,CAACC,MAAO,SAAU/B,MAAOA,IAGjDyB,EAAKW,kBAAkBvB,EAAUb,EAAOmC,KAlDO1C,KAqDjD2C,kBAAoB,SAACvB,EAAUC,EAAQqB,GAGrC,IADA,IAAMG,EAAgB,GACbC,EAAQ,EAAGA,EAAQJ,EAAMI,IAAS,CACzC,IAAIjD,EAAO,IAAIc,KACfd,EAAKkD,QAAQ3B,EAASP,UAAYiC,GAClC,IAAME,EAAWnD,EAAK6B,UAChBuB,EAAO,IAAItD,EAAUqD,EAAgBnD,GAC3CgD,EAAcK,KAAMD,GAEtBjB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,aAAc/B,MAAOsC,KA/DN7C,KAiE/CmD,wBAA0B,SAACjB,GACvBkB,QAAQC,IAAI,SAAUrB,GAET,OADAE,EAAMoB,cAAcC,WAAWC,KAAKjD,MAE7CyB,EAAKF,cAAc2B,QAAQC,eAE3B1B,EAAKD,YAAY0B,QAAQC,gBAtE7B1D,KAAK6B,MAAQA,EAEb7B,KAAK8B,cAAgBA,EACrB9B,KAAK+B,YAAcA,GCCN4B,cAEnB,SAAAA,EAAY9B,GAAO,IAAAG,EAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2D,IACjB3B,EAAAlC,OAAA8D,EAAA,EAAA9D,CAAAE,KAAAF,OAAA+D,EAAA,EAAA/D,CAAA6D,GAAAG,KAAA9D,KAAM6B,KAEDC,cAAgBiC,IAAMC,YAC3BhC,EAAKD,YAAcgC,IAAMC,YAEzBhC,EAAKJ,iBAAmB,IAAIA,EAAiBI,EAAKH,MAAOG,EAAKF,cAAeE,EAAKD,aANjEC,wEAwEV,IAAAiC,EAMHjE,KAAK6B,MAJPqC,EAFKD,EAELC,OACA9C,EAHK6C,EAGL7C,SACAC,EAJK4C,EAIL5C,OACA8C,EALKF,EAKLE,eAEF,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,UAAtC,mCACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SACCG,KAAK,OACLF,UAAU,eACV3E,GAAG,SACH8E,YAAY,iHACZC,SAAU3E,KAAK4B,iBAAiBK,mBAChC1B,MAAO2D,IACRE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,QAASN,UAAU,2CAAxC,UAINH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,QAAtC,kEACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACCC,IAAK/E,KAAK4B,iBAAiBE,cAC3BkD,SAAU5D,EACVuD,SAAU3E,KAAK4B,iBAAiBY,qBAChCyC,WAAW,cACXC,gBAAgB,iHAChBC,OAAQC,MACThB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,OAAQQ,OAAQ,WAAY7B,KAAK,KAAKe,UAAU,0CAA0Ce,QAAStF,KAAK4B,iBAAiBuB,yBAC5IiB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBgB,IAAI,+DAK1CnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,QAAtC,oFACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CACCC,IAAK/E,KAAK4B,iBAAiBG,YAC3BiD,SAAU3D,EACVsD,SAAU3E,KAAK4B,iBAAiBgB,mBAChCqC,WAAW,cACXC,gBAAgB,mIAChBC,OAAQC,MACThB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,OAAQQ,OAAQ,WAAY7B,KAAK,KAAKe,UAAU,0CAA0Ce,QAAStF,KAAK4B,iBAAiBuB,yBAC5IiB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAiBgB,IAAI,+DAK1CnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,aAAaC,QAAQ,WAAtC,4GACAJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UACCC,UAAU,6BACV3E,GAAG,UACHW,MAAO4D,EACPQ,SAAU3E,KAAK4B,iBAAiBW,sBAC/B6B,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,KAAd,KACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,MACA6D,EAAAC,EAAAC,cAAA,UAAQ/D,MAAM,MAAd,OAEF6D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,QAAMM,MAAO,CAACC,MAAO,QAASN,UAAU,2CAAxC,gBAxJkBiB,aCTfC,EACjB,SAAAA,EAAa7F,GAAME,OAAAC,EAAA,EAAAD,CAAAE,KAAAyF,GACfzF,KAAKJ,GAAKA,EACVI,KAAK0F,KAAO,GACZ1F,KAAKO,MAAQ,GCDAoF,6MAEnBC,WAAa,WAEX,IAAMC,EAAc/F,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAKH,MAAMgE,gBAEtCA,EAAe3C,KAAM,IAAIuC,GAAc,IAAI9E,MAAOe,YAClDM,EAAKH,MAAMQ,aAAa,CAACC,MAAO,iBAAkB/B,MAAOsF,OAG3DE,WAAa,SAAC7D,GACZ,IAAMtC,GAAMsC,EAAME,OAAOxC,GAErBiG,EAAc/F,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAKH,MAAMgE,gBACpCA,EAAiBA,EAAeG,OAAO,SAAC/C,GACtC,OAAOA,EAAKrD,KAAOA,IAErBoC,EAAKH,MAAMQ,aAAa,CAACC,MAAO,iBAAkB/B,MAAOsF,OAG3DI,qBAAuB,SAAC/D,GACtB,IAAMtC,GAAMsC,EAAME,OAAOxC,GACnBW,EAAQ2B,EAAME,OAAO7B,MACvBsF,EAAc/F,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAKH,MAAMgE,gBACpCA,EAAeK,QAAQ,SAACC,GAClBA,EAAGvG,KAAOA,IACZuG,EAAGT,KAAOnF,KAGdyB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,iBAAkB/B,MAAOsF,OAG3DO,sBAAwB,SAAClE,GAEvB,IAAMtC,GAAMsC,EAAME,OAAOxC,GACnBW,EAAQ4B,SAAUD,EAAME,OAAO7B,MAAO,KAAQ,GAEhDsF,EAAc/F,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAKH,MAAMgE,gBACpCA,EAAeK,QAAQ,SAACC,GAClBA,EAAGvG,KAAOA,IACZuG,EAAG5F,MAAQA,KAGfyB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,iBAAkB/B,MAAOsF,6EAGlD,IAAAQ,EAAArG,KAEH6F,EACA7F,KAAK6B,MADLgE,eAEJ,OACIzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,uHACCsB,EAAeS,IAAI,SAACrD,GACjB,OACImB,EAAAC,EAAAC,cAAA,OAAKiC,IAAKtD,EAAKrD,GAAI2E,UAAU,wBAC3BH,EAAAC,EAAAC,cAAA,QAAAxE,OAAA0G,OAAA,GACKvD,EADL,CAECwB,KAAK,OACLF,UAAU,eACVI,SAAU0B,EAAKD,sBACf7F,MAAO0C,EAAK1C,MACZmE,YAAY,iCAAQ+B,aAAW,iCAAQC,mBAAiB,mBACzDtC,EAAAC,EAAAC,cAAA,QAAAxE,OAAA0G,OAAA,GACKvD,EADL,CAECwB,KAAK,OACLF,UAAU,eACVI,SAAU0B,EAAKJ,qBACf1F,MAAO0C,EAAKyC,KACZhB,YAAY,mIAA0B+B,aAAW,mIAA0BC,mBAAiB,mBAC7FtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqB3E,GAAG,iBAErCwE,EAAAC,EAAAC,cAAA,SAAAxE,OAAA0G,OAAA,GACKvD,EADL,CAECqC,QAASe,EAAKN,WACdxB,UAAU,2BACVE,KAAK,WAJN,SASZL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACbH,EAAAC,EAAAC,cAAA,UAAQG,KAAK,SAASF,UAAU,gCAAgCe,QAAUtF,KAAK4F,YAA/E,8DAnFqBJ,aCMlBmB,2BACjB,SAAAA,EAAY9E,GAAO,IAAAG,EAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAA2G,IACjB3E,EAAAlC,OAAA8D,EAAA,EAAA9D,CAAAE,KAAAF,OAAA+D,EAAA,EAAA/D,CAAA6G,GAAA7C,KAAA9D,KAAM6B,KAOR+E,eAAiB,WAAM,IACXC,EAAa7E,EAAK8E,MAAlBD,SACR7E,EAAK+E,SAAS,CAACF,UAAWA,KAP5B7E,EAAK8E,MAAQ,CACXD,UAAU,GAJK7E,wEAwBV,IACE6E,EAAY7G,KAAK8G,MAAjBD,SADF5C,EAE2BjE,KAAK6B,MAA9BoB,EAFFgB,EAEEhB,KAAM+D,EAFR/C,EAEQ+C,gBACb,OACI5C,EAAAC,EAAAC,cAAA,OAAKC,UAAW,+BAAiCsC,EAAW,wBAA0B,KAClFzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAActB,EAAKpD,KAAOa,EAAcuC,EAAKpD,MAAQ,IACnEuE,EAAAC,EAAAC,cAAA,WACMuC,EACIzC,EAAAC,EAAAC,cAAA,SACCG,KAAK,OACLjB,KAAK,UACLe,UAAU,wBACV3E,GAAIqD,EAAKrD,GACT8E,YAAY,gGACZC,SAAUqC,EACVzG,MAAO0C,EAAKhD,UACbmE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,mCAAoCtB,EAAKhD,QAAzC,yBAEVmE,EAAAC,EAAAC,cAAA,WACMuC,EACIzC,EAAAC,EAAAC,cAAA,YACCG,KAAK,OACLjB,KAAK,UACLe,UAAU,oBACV3E,GAAIqD,EAAKrD,GACT8E,YAAY,0GACZC,SAAUqC,EACVzG,MAAO0C,EAAK/C,UACbkE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAatB,EAAK/C,WAGhDkE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oFAA4CtB,EAAK5C,OAAjD,wBACA+D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,uGAAgDtB,EAAK9C,UAArD,wBACAiE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,8EAAgDtB,EAAK7C,MAArD,wBACAgE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iCAAgCH,EAAAC,EAAAC,cAAA,2MAGtDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEAEbsC,EACIzC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDe,QAAStF,KAAK4G,gBAAiBxC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAC9GH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,gDAAgDe,QAAStF,KAAK4G,gBAAiBxC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,4BAtEvGiB,cCL3ByB,EAAY,CACdpC,MAAO,SACPQ,OAAQ,WAES6B,cACjB,SAAAA,EAAYrF,GAAO,IAAAG,EAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkH,IACjBlF,EAAAlC,OAAA8D,EAAA,EAAA9D,CAAAE,KAAAF,OAAA+D,EAAA,EAAA/D,CAAAoH,GAAApD,KAAA9D,KAAM6B,KAMRsF,uBAAyB,WACrBnF,EAAK+E,SAAS,CAAEK,YAAapF,EAAK8E,MAAMM,cARzBpF,EAUnBoE,sBAAwB,SAAClE,GACrB,IAEI3B,EAFE8G,EAAUvH,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAKH,MAAMwF,YADHC,EAEVpF,EAAMoB,cAAnB1D,EAFuB0H,EAEvB1H,GAAI4D,EAFmB8D,EAEnB9D,KAEZ,OAAQA,GACJ,IAAK,UAEDjD,GADAA,EAAQ4B,SAAUD,EAAME,OAAO7B,MAAO,KAAQ,KAC7B,EACjB,MACJ,IAAK,UACL,QACIA,EAAQ2B,EAAME,OAAO7B,MAG7B,IAGIgH,EAAYF,EAAWG,UAHV,SAACrB,EAAIrD,GAClB,OAAQqD,EAAGvG,MAAQA,IAGvByH,EAAWE,GAAW/D,GAAQjD,EAE9ByB,EAAKH,MAAMQ,aAAa,CAACC,MAAO,aAAc/B,MAAO8G,KA3BvDrF,EAAK8E,MAAQ,CACVM,YAAY,GAJEpF,wEAgCV,IAAAqE,EAAArG,KACCoH,EAAapH,KAAK8G,MAAMM,WAAa,OAAS,GAC9CK,EAAS,OAASzH,KAAK8G,MAAMM,WAAa,cAAgB,iBACxDC,EAAerH,KAAK6B,MAApBwF,WACR,OACIjD,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,UACCG,KAAK,SACLF,UAAU,qCACVe,QAAStF,KAAKmH,wBACX/C,EAAAC,EAAAC,cAAA,KAAIM,MAAOqC,EAAY1C,UAAW,QAAUkD,IAJhD,4JAMIrD,EAAAC,EAAAC,cAAA,KAAIM,MAAOqC,EAAY1C,UAAW,QAAUkD,MAGpDrD,EAAAC,EAAAC,cAAA,OAAKC,UAAW,uCAAyC6C,GACpDC,EAAWf,IAAI,SAACrD,GACb,OACImB,EAAAC,EAAAC,cAACoD,EAAD,CACCnB,IAAKtD,EAAKrD,GACVqD,KAAMA,EACN+D,gBAAiBX,EAAKD,mCAvDhBZ,aCJdmC,mLACV,IAAA1D,EAC0DjE,KAAK6B,MAA/D+F,EADA3D,EACA2D,QAASC,EADT5D,EACS4D,QAASxH,EADlB4D,EACkB5D,OAAQgB,EAD1B4C,EAC0B5C,OAAQqB,EADlCuB,EACkCvB,KAAMyB,EADxCF,EACwCE,eAC/C,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAcqD,EAA5B,QACAxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,iEAAwCJ,EAAxC,MACAC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,oNAGJH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAcsD,EAA5B,QACAzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,8CAAqClD,EAAM,iBAAAH,OAAUR,EAAcW,GAAxB,KAAqC,IAChF+C,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,yOAAuE7B,EAAvE,gCAGJ0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAclE,EAA5B,QACA+D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,mCACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,sGAA6ClD,EAAM,iBAAAH,OAAUR,EAAcW,GAAxB,KAAqC,GAAxF,eAvBqBmE,aCD7BsC,EAAQ,IAAInH,KACdoH,EAAW,IAAIpH,KACnBoH,EAAShF,QAAQ+E,EAAMjH,UAAY,OACdmH,EACjB,SAAAA,IAAgBlI,OAAAC,EAAA,EAAAD,CAAAE,KAAAgI,GACZhI,KAAKiI,UAAW,EAChBjI,KAAKkE,OAAS,EACdlE,KAAKoB,SAAW0G,EAChB9H,KAAKqB,OAAS0G,EACd/H,KAAK0C,KAAO,EACZ1C,KAAKmE,eAAiB,GACtBnE,KAAK6F,eAAiB,CAAE,IAAIJ,EAAcqC,EAAMpG,YAChD1B,KAAKqH,WAAa,CAAE,IAAI1H,EAAUmI,EAAMpG,UAAWoG,GAAQ,IAAInI,EAAUoI,EAASrG,UAAWqG,IAC7F/H,KAAKkI,MAAQ,CACTN,QAAS,EACTC,QAAS,EACTxH,OAAQ,ICuJL8H,cA/Jb,SAAAA,EAAYtG,GAAO,IAAAG,EAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmI,IACjBnG,EAAAlC,OAAA8D,EAAA,EAAA9D,CAAAE,KAAAF,OAAA+D,EAAA,EAAA/D,CAAAqI,GAAArE,KAAA9D,KAAM6B,KAKRuG,kBAAoB,WAClB,IAAMC,EAAaC,aAAaC,QAAQ,WAClCC,EAAc,SAAClH,GACnBU,EAAK+E,SAAS,CAACkB,UAAU,IACzBQ,WAAW,WACTzG,EAAK+E,SAAS,CAACkB,UAAU,KACxB3G,IAGL,GAAI+G,EAAY,CACd,IAAIK,EAASC,KAAKC,MAAMP,GACxBK,EAAOtH,SAAWsH,EAAOtH,SAAW,IAAIT,KAAK+H,EAAOtH,UAAY,KAChEsH,EAAOrH,OAASqH,EAAOrH,OAAS,IAAIV,KAAK+H,EAAOrH,QAAU,KAC1DW,EAAK+E,SAAU2B,GACfF,EAAY,WAEZA,EAAY,MAtBGxG,EA0BnB6G,cAAgB,SAACC,GACf9G,EAAK+E,SAALjH,OAAAiJ,EAAA,EAAAjJ,CAAA,GAAgBgJ,EAAKxG,MAAQwG,EAAKvI,OAAQ,WACxCP,KAAKgJ,kBA5BUhH,EAgCnBiH,cAAgB,SAACH,GACfR,aAAaY,QAAQ,UAAWP,KAAKQ,UAAUL,KAjC9B9G,EAoCnBoH,wBAA0B,WACxBpH,EAAK+E,SAAU,IAAIiB,EAAmB,WACpChI,KAAKgJ,kBAtCUhH,EA0CnBgH,aAAe,WAEb,IAQI9E,EAASlC,EAAK8E,MAAM5C,OACpBxB,EAAOV,EAAK8E,MAAMpE,KAClBmD,EAAc/F,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAK8E,MAAMjB,gBAChCwB,EAAUvH,OAAAgG,EAAA,EAAAhG,CAAOkC,EAAK8E,MAAMO,YAC1BlD,EAAiBnC,EAAK8E,MAAM3C,eAAiB,IAC/C+D,EAAQlG,EAAK8E,MAAMoB,MACnBmB,EAduB,SAACxD,GAK1B,OAJaA,EAAeyD,OAC1B,SAACC,EAAaC,GAAd,OAA+BD,EAAcC,EAAajJ,OAC1D,GAWgBkJ,CAAmB5D,GAGvCqC,EAAMN,QAAUzF,SAAS+B,EAASC,EAAgB,KAAO,EACzD+D,EAAML,QAAU1F,SAAS+B,EAASgE,EAAMN,QAAS,IAAMyB,GAAiB,EACxEnB,EAAM7H,OAAS8B,SAAS+F,EAAML,QAAUnF,EAAM,KAAO,EAGrD2E,EAAarF,EAAK0H,kBAAkBrC,EAAYa,EAAM7H,QAEtD2B,EAAK+E,SAAS,CAACmB,QAAOb,cAAa,WACjCrH,KAAKiJ,cAAcjJ,KAAK8G,QACxB6C,KAFiC7J,OAAA8J,EAAA,EAAA9J,CAAAkC,MApElBA,EAyEnB0H,kBAAoB,SAACrC,EAAYhH,GAiB/B,OAhBoBgH,EAAWiC,OAC7B,SAAUC,EAAaC,EAAc1G,GAWjC,OAVF0G,EAAanJ,OAASA,EACR,IAAVyC,GACF0G,EAAarJ,UAAYE,EAASmJ,EAAavJ,QAC/CuJ,EAAapJ,MAAQoJ,EAAarJ,YAGlCqJ,EAAarJ,UAAYE,EAASmJ,EAAavJ,QAC/CuJ,EAAapJ,MAAQoJ,EAAarJ,UAAYkH,EAAWvE,EAAQ,GAAG1C,OAEpEmJ,EAAYrG,KAAKsG,GACVD,GACN,KApFPvH,EAAK8E,MAAQ,IAAIkB,EAHAhG,wEA6FV,IACAiG,EAAYjI,KAAK8G,MAAjBmB,SACP,OACI7D,EAAAC,EAAAC,cAAA,WAASC,UAAU,kBAEd0D,GACD7D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACCC,UAAU,0EACVK,MAAO,CAACiF,OAAQ,SAEfzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAiB3E,GAAG,YAC/BwE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAsBK,MAAO,CAACkF,UAAW,WAAvD,oDAGA1F,EAAAC,EAAAC,cAAA,OAAK1E,GAAG,cAMhBqI,GACA7D,EAAAC,EAAAC,cAACyF,EAAD,CACC7F,OAAQlE,KAAK8G,MAAM5C,OACnB9C,SAAUpB,KAAK8G,MAAM1F,SACrBC,OAAQrB,KAAK8G,MAAMzF,OACnBgG,WAAYrH,KAAK8G,MAAMO,WACvBlD,eAAgBnE,KAAK8G,MAAM3C,eAC3B9B,aAAcrC,KAAK6I,gBAGpBZ,GACA7D,EAAAC,EAAAC,cAAC0F,EAAD,CACCnE,eAAgB7F,KAAK8G,MAAMjB,eAC3BxD,aAAcrC,KAAK6I,gBAGpBZ,GACA7D,EAAAC,EAAAC,cAAC2F,EAAD,CACC5C,WAAYrH,KAAK8G,MAAMO,WACvBhF,aAAcrC,KAAK6I,gBAGpBZ,GACA7D,EAAAC,EAAAC,cAAC4F,EAAD,CACCtC,QAAS5H,KAAK8G,MAAMoB,MAAMN,QAC1BC,QAAS7H,KAAK8G,MAAMoB,MAAML,QAC1BxH,OAAQL,KAAK8G,MAAMoB,MAAM7H,OACzBe,SAAUpB,KAAK8G,MAAM1F,SACrBC,OAAQrB,KAAK8G,MAAMzF,OACnBqB,KAAM1C,KAAK8G,MAAMpE,KACjByB,eAAgBnE,KAAK8G,MAAM3C,iBAG5B8D,GACA7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACbH,EAAAC,EAAAC,cAAA,UACCC,UAAU,yBACVe,QAAStF,KAAKoJ,yBAFf,6DAvJO5D,aCiBN2E,cAnBb,SAAAA,EAAYtI,GAAO,IAAAG,EAAA,OAAAlC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmK,IACjBnI,EAAAlC,OAAA8D,EAAA,EAAA9D,CAAAE,KAAAF,OAAA+D,EAAA,EAAA/D,CAAAqK,GAAArG,KAAA9D,KAAM6B,KACDiF,MAAQ,GAFI9E,wEAMjB,OACEoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,cACEF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,oFAEAH,EAAAC,EAAAC,cAAC8F,EAAD,MACFhG,EAAAC,EAAAC,cAAA,uBAbUkB,aCME6E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OAAOvG,EAAAC,EAAAC,cAACsG,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.26efda3d.chunk.js","sourcesContent":["export default class DailyCost {\r\n    constructor( id, date ) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.spended = 0;\r\n        this.comment = \"\";\r\n        this.available = 0;\r\n        this.saved = 0;\r\n        this.budget = 0;\r\n    }\r\n}","const _addZero = function(value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n};\r\nexport const transformDate = (date) => {\r\n    date = new Date(date);\r\n    const currDate = _addZero(date.getDate());\r\n    const currMonth = _addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`${currDate}.${currMonth}.${currYear}`);\r\n};\r\nexport const calcDay = (time) => {\r\n    const day = Math.ceil(time / (1000 * 3600 * 24));\r\n    return day;\r\n}\r\nexport const calcDaysDifference = (startDay, endDay) => {\r\n    const timeDifference = Math.abs(endDay.getTime() - startDay.getTime());\r\n    const days = calcDay(timeDifference);\r\n    return days;\r\n};\r\n\r\n/*  transformDate = (date) => {\r\n        date = new Date(date);\r\n        const currDate = this._addZero(date.getDate());\r\n        const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n        const currYear = date.getFullYear().toString();\r\n        return (`${currDate}.${currMonth}.${currYear}`);\r\n    }; */\r\n\r\n/*   transformDate = (endDay, days) => {\r\n    // console.log(\"Transform Date\");\r\n    let date = new Date(endDay);\r\n    // date.setDate(date.getDate() + days);\r\n    const currDate = this._addZero(date.getDate());\r\n    const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  }; */","import DailyCost from \"../model/DailyCost\";\r\nimport { calcDaysDifference } from \"../utils/Date\";\r\n\r\nexport default class IncomeController {\r\n    constructor(props, startDatePick, endDatePick) {\r\n        this.props = props;\r\n        // this.writeToStateFunc = writeToState;\r\n        this.startDatePick = startDatePick;\r\n        this.endDatePick = endDatePick;\r\n    }\r\n    // Income\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"income\", value: value});\r\n  }\r\n  // Select input\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    this.props.writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  // Calendar\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    const endDay = this.props.endDay;\r\n    value.setHours(0,0,0,0);\r\n    endDay.setHours(0,0,0,0);\r\n    const startDayTime = value.getTime();\r\n    const endDayTime = endDay.getTime();\r\n    if (startDayTime > endDayTime) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(value, endDay) + 1; //If start & end dates same => +1 (not 0)\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"startDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(value, endDay, days);\r\n  }\r\n  handleEndDaySelect = (value) => {\r\n    value = value || null;\r\n    const startDay = this.props.startDay;\r\n    value.setHours(0,0,0,0);\r\n    startDay.setHours(0,0,0,0);\r\n    const startDayTime = startDay.getTime();\r\n    const endDayTime = value.getTime();\r\n    if (startDayTime > endDayTime) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(startDay, value) + 1; //If start & end dates same =>  +1 (not 0)\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"endDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(startDay, value, days);\r\n  }\r\n\r\n  _updateDailyCosts = (startDay, endDay, days) => {\r\n    // const dailyCosts = this.props.dailyCosts;\r\n    const newDailyCosts = [];\r\n    for (let index = 0; index < days; index++) {\r\n      let date = new Date();\r\n      date.setDate(startDay.getDate() + index);\r\n      const dateTime = date.getTime();\r\n      const cost = new DailyCost(dateTime/*id*/, date);\r\n      newDailyCosts.push( cost );\r\n    }\r\n    this.props.writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  }\r\n    handleClickCalendarIcon = (event) => {\r\n        console.log(\"this: \", this);\r\n        const name = event.currentTarget.attributes.name.value;\r\n        if (name === \"SD\") {\r\n            this.startDatePick.current.onInputClick();\r\n        } else { //ED\r\n            this.endDatePick.current.onInputClick();\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\n// import DailyCost from \"../model/DailyCost\";\r\n// import { calcDaysDifference } from \"../utils/Date\";\r\nimport IncomeController from \"../controllers/IncomeController\";\r\n\r\nexport default class Income extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startDatePick = React.createRef();\r\n    this.endDatePick = React.createRef();\r\n    /* !New */\r\n    this.IncomeController = new IncomeController(this.props, this.startDatePick, this.endDatePick);\r\n  }\r\n  // // Income\r\n  // handleChangeIncome = (event) => {\r\n  //   let value = parseInt( event.target.value, 10 ) || '';\r\n  //   value = value || 0;\r\n  //   this.props.writeToState({field: \"income\", value: value});\r\n  // }\r\n  // // Select input\r\n  // percentStorageSelect = (event) => {\r\n  //   let value = parseInt( event.target.value, 10 );\r\n  //   this.props.writeToState({field: \"percentStorage\", value: value});\r\n  // }\r\n  // // Calendar\r\n  // handleStartDaySelect = (value) => {\r\n  //   value = value || null;\r\n  //   const endDay = this.props.endDay;\r\n  //   value.setHours(0,0,0,0);\r\n  //   endDay.setHours(0,0,0,0);\r\n  //   if (value.getTime() > endDay.getTime()) {\r\n  //     return;\r\n  //   }\r\n  //   const days = calcDaysDifference(value, endDay) + 1; //If start & end dates same => +1 (not 0)\r\n  //   this.props.writeToState({field: \"days\", value: days});\r\n  //   this.props.writeToState({field: \"startDay\", value: value});\r\n\r\n  //   // Update detail daily cost block\r\n  //   this._updateDailyCosts(value, endDay, days);\r\n  // }\r\n  // handleEndDaySelect = (value) => {\r\n  //   value = value || null;\r\n  //   const startDay = this.props.startDay;\r\n  //   value.setHours(0,0,0,0);\r\n  //   startDay.setHours(0,0,0,0);\r\n  //   if (startDay.getTime() > value.getTime()) {\r\n  //     return;\r\n  //   }\r\n  //   const days = calcDaysDifference(startDay, value) + 1; //If start & end dates same =>  +1 (not 0)\r\n  //   this.props.writeToState({field: \"days\", value: days});\r\n  //   this.props.writeToState({field: \"endDay\", value: value});\r\n\r\n  //   // Update detail daily cost block\r\n  //   this._updateDailyCosts(startDay, value, days);\r\n  // }\r\n\r\n  // _updateDailyCosts = (startDay, endDay, days) => {\r\n  //   // const dailyCosts = this.props.dailyCosts;\r\n  //   const newDailyCosts = [];\r\n  //   for (let index = 0; index < days; index++) {\r\n  //     let date = new Date();\r\n  //     date.setDate(startDay.getDate() + index);\r\n  //     const cost = new DailyCost(date.getTime()/*id*/, date);\r\n  //     newDailyCosts.push( cost );\r\n  //   }\r\n  //   this.props.writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  // }\r\n\r\n  // handleClickCalendarIcon = (event) => {\r\n  //   const name = event.currentTarget.attributes.name.value;\r\n  //   if (name === \"SD\") {\r\n  //     this.startDatePick.current.onInputClick();\r\n  //   } else { //ED\r\n  //     this.endDatePick.current.onInputClick();\r\n  //   }\r\n  // }\r\n\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      endDay,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.IncomeController.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.IncomeController.startDatePick}\r\n                 selected={startDay}\r\n                 onChange={this.IncomeController.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} name=\"SD\" className=\"input-group-text justify-content-center\" onClick={this.IncomeController.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата окончания:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.IncomeController.endDatePick}\r\n                 selected={endDay}\r\n                 onChange={this.IncomeController.handleEndDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату окончания\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} name=\"ED\" className=\"input-group-text justify-content-center\" onClick={this.IncomeController.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.IncomeController.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                  <option value=\"35\">35</option>\r\n                  <option value=\"40\">40</option>\r\n                  <option value=\"45\">45</option>\r\n                  <option value=\"50\">50</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class MandatoryCost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MandatoryCost from '../model/MandatoryCosts';\r\n\r\nexport default class Operation extends Component {\r\n\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const mandatoryCosts = [...this.props.mandatoryCosts];\r\n    // mandatoryCosts.unshift( new MandatoryCost(new Date().getTime()) );\r\n    mandatoryCosts.push( new MandatoryCost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts = mandatoryCosts.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        mandatoryCosts\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-primary mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {mandatoryCosts.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group m-0 mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Day.css';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\nconst style = {\r\n    ':first-child': {\r\n        display: 'none'\r\n     }\r\n};\r\nexport default class Day extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        editMode: false\r\n      };\r\n    }\r\n\r\n    switchEditMode = () => {\r\n        const { editMode } = this.state;\r\n        this.setState({editMode: !editMode});\r\n    }\r\n\r\n    // // Income\r\n    // handleChangeIncome = (event) => {\r\n    //     let value = parseInt( event.target.value, 10 ) || '';\r\n    //     value = value || 0;\r\n    //     this.props.writeToState({field: \"income\", value: value});\r\n    // }\r\n    // handleChange = (e) => {\r\n    //     const { id, value } = e.currentTarget;\r\n    //     this.setState({ [id]: value });\r\n    // }\r\n\r\n    render() {\r\n        const {editMode} = this.state;\r\n        const {cost, changeCostValue} = this.props;\r\n        return (\r\n            <div className={\"day card bg-secondary mb-1 \" + (editMode ? \"border border-warning\" : \"\")}>\r\n                <div className=\"card-body row\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <h5 className=\"card-title\">{cost.date ? transformDate(cost.date) : \"\"}</h5>\r\n                        <div>\r\n                            { editMode\r\n                                ? <input\r\n                                   type=\"text\"\r\n                                   name=\"spended\"\r\n                                   className=\"form-control-sm w-100\"\r\n                                   id={cost.id}\r\n                                   placeholder=\"Сумма трат за день\"\r\n                                   onChange={changeCostValue}\r\n                                   value={cost.spended}/>\r\n                                : <span className=\"card-text\">Траты: {cost.spended} руб.</span> }\r\n                        </div>\r\n                        <div>\r\n                            { editMode\r\n                                ? <textarea\r\n                                   type=\"text\"\r\n                                   name=\"comment\"\r\n                                   className=\"form-control mt-2\"\r\n                                   id={cost.id}\r\n                                   placeholder=\"Введите коментарий\"\r\n                                   onChange={changeCostValue}\r\n                                   value={cost.comment}/>\r\n                                : <span className=\"card-text\">{cost.comment}</span> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-5 d-flex flex-column justify-content-end align-items-end\">\r\n                        <div className=\"\">\r\n                            <h6 className=\"card-title\">Дневной бюджет: {cost.budget} руб.</h6>\r\n                            <h6 className=\"card-title\">Остаток на сегодня: {cost.available} руб.</h6>\r\n                            <h6 className=\"card-title mb-0\">Общий остаток: {cost.saved} руб.</h6>\r\n                            <h6 className=\"card-title font-weight-normal\"><i>(С учётом остатка за предыдущий день)</i></h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-1 d-flex align-items-center justify-content-end\">\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> */}\r\n                    { editMode\r\n                        ? <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-check\" /></button>\r\n                        : <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Daily.css';\r\nimport Day from './Day';\r\n\r\nconst iconStyle = {\r\n    width: \"0.8rem\",\r\n    cursor: \"pointer\"\r\n};\r\nexport default class Daily extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         showDetail: true\r\n      };\r\n    }\r\n    handleSwitchDetailShow = () => {\r\n        this.setState({ showDetail: !this.state.showDetail });\r\n    }\r\n    handleChangeCostValue = (event) => {\r\n        const dailyCosts = [...this.props.dailyCosts];\r\n        const { id, name } = event.currentTarget;\r\n        let value;\r\n        switch (name) {\r\n            case \"spended\":\r\n                value = parseInt( event.target.value, 10 ) || '';\r\n                value = value || 0;\r\n                break;\r\n            case \"comment\":\r\n            default:\r\n                value = event.target.value;\r\n                break;\r\n        }\r\n        const callback = (el, index) => {\r\n            return +el.id === +id;\r\n        };\r\n        let costIndex = dailyCosts.findIndex(callback);\r\n        dailyCosts[costIndex][name] = value;\r\n        \r\n        this.props.writeToState({field: \"dailyCosts\", value: dailyCosts});\r\n    }\r\n    render() {\r\n        const showDetail = this.state.showDetail ? 'show' : '';\r\n        const btnVis = \"fa \" + (this.state.showDetail ? \"fa-arrow-up\" : \"fa-arrow-down\");\r\n        const { dailyCosts } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                    <button\r\n                     type=\"button\"\r\n                     className=\" w-100 text-center btn btn-primary\"\r\n                     onClick={this.handleSwitchDetailShow} >\r\n                        <i  style={iconStyle}  className={\"mr-4 \" + btnVis} />\r\n                        Детализация расходов по дням\r\n                        <i  style={iconStyle}  className={\"ml-4 \" + btnVis} />\r\n                    </button>\r\n                </div>\r\n                <div className={\"daily text-white bg-primary collapse\" + showDetail} >\r\n                    {dailyCosts.map((cost)=>{\r\n                        return (\r\n                            <Day\r\n                             key={cost.id}\r\n                             cost={cost}\r\n                             changeCostValue={this.handleChangeCostValue} />\r\n                        );\r\n                      })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\n// const Total = (props) => {\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget, endDay, days, percentStorage} = this.props;\r\n    return (\r\n        <div className=\"mt-2 text-white card-group text-center\">\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n              <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">Остаток {endDay ? `(до ${transformDate(endDay)})` : \"\"}</h5>\r\n              <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">в день</h5>\r\n              <p className=\"card-text\">Ежедневный бюджет  {endDay ? `(до ${transformDate(endDay)})` : \"\"}.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )};\r\n  };\r\n\r\n// export default Total;\r\n","import MandatoryCost from \"./MandatoryCosts\";\r\nimport DailyCost from \"./DailyCost\";\r\n\r\nconst today = new Date();\r\nlet tomorrow = new Date();\r\ntomorrow.setDate(today.getDate() + 1);\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.isLoaded = true;\r\n        this.income = 0;\r\n        this.startDay = today;\r\n        this.endDay = tomorrow;\r\n        this.days = 2;\r\n        this.percentStorage = 10;\r\n        this.mandatoryCosts = [ new MandatoryCost(today.getTime()) ];\r\n        this.dailyCosts = [ new DailyCost(today.getTime(), today), new DailyCost(tomorrow.getTime(), tomorrow) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Daily from './Daily';\r\nimport Total from './Total';\r\n// import MandatoryCosts from '../model/MandatoryCosts';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = new AppInitialState();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    const loadIndFunc = (time) => {\r\n      this.setState({isLoaded: false});\r\n      setTimeout(() => {\r\n        this.setState({isLoaded: true});\r\n      }, time);\r\n    };\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      parsed.endDay = parsed.endDay ? new Date(parsed.endDay) : null;\r\n      this.setState( parsed );\r\n      loadIndFunc(1200);\r\n    } else {\r\n      loadIndFunc(3000);\r\n    }\r\n  }\r\n  // Write to state and storage functions\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _updateTotal = () => {\r\n    // TODO: Add switcher for fields and update only used branches\r\n    const _countRequiredCost = (mandatoryCosts) => {\r\n      let result = mandatoryCosts.reduce(\r\n        (accumulator, currentValue) => accumulator + currentValue.value,\r\n        0\r\n      );\r\n      return result;\r\n    };\r\n\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let mandatoryCosts = [...this.state.mandatoryCosts];\r\n    let dailyCosts = [...this.state.dailyCosts];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = _countRequiredCost(mandatoryCosts);\r\n\r\n    // Calc Total info\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    // Calc Daily info\r\n    dailyCosts = this._reCalcDailyCosts(dailyCosts, total.budget);\r\n\r\n    this.setState({total, dailyCosts}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n\r\n  _reCalcDailyCosts = (dailyCosts, budget) => {\r\n    let newDailyCosts = dailyCosts.reduce(\r\n      function (accumulator, currentValue, index) {\r\n        currentValue.budget = budget;\r\n        if (index === 0) {\r\n          currentValue.available = budget - currentValue.spended;\r\n          currentValue.saved = currentValue.available;//currentValue.available - currentValue.spended;\r\n        } else {\r\n          // currentValue.available = dailyCosts[index - 1].available - currentValue.spended;\r\n          currentValue.available = budget - currentValue.spended; //+ dailyCosts[index - 1].saved;\r\n          currentValue.saved = currentValue.available + dailyCosts[index - 1].saved;// - currentValue.spended;\r\n        }\r\n          accumulator.push(currentValue);\r\n          return accumulator;\r\n        }, []\r\n    );\r\n    // console.log(newDailyCosts);\r\n    return newDailyCosts;\r\n  }\r\n\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {\r\n            !isLoaded &&\r\n            <div>\r\n              <div\r\n               className=\"d-flex flex-column justify-content-center align-items-center text-white\"\r\n               style={{height: \"85vh\"}}>\r\n                {/* <div className=\"cm-spinner\"></div> */}\r\n                <div className=\"loader-wrapper\" id=\"loader-1\">\r\n                    <h3 className=\"font-weight-lighter\" style={{textAlign: \"Center\"/* , margin: \"20px\" */}} >\r\n                      Загрузка\r\n                    </h3>\r\n                    <div id=\"loader\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             dailyCosts={this.state.dailyCosts}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             mandatoryCosts={this.state.mandatoryCosts}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Daily\r\n             dailyCosts={this.state.dailyCosts}\r\n             writeToState={this._writeToState} ></Daily>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <div className=\"m-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n          }\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './css/App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './css/custom.css';\nimport './css/index.css';\nimport './css/loadIndicators.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}