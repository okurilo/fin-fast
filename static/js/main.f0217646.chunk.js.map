{"version":3,"sources":["img/calendar2.svg","components/Income.js","model/Cost.js","components/Operation.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Income","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeIncome","event","value","parseInt","target","writeToState","field","handleChangeDays","percentStorageSelect","handleStartDaySelect","handleClickCalendarIcon","datePick","current","onInputClick","React","createRef","_this$props","income","startDay","days","percentStorage","react_default","a","createElement","className","htmlFor","type","id","placeholder","onChange","style","width","es","ref","selected","dateFormat","placeholderText","locale","ru","cursor","onClick","src","calendar","alt","Component","Cost","text","Operation","addNewCost","costs","toConsumableArray","push","Date","getTime","deleteCost","filter","cost","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","Total","_addZero","toString","length","transformDate","console","log","date","setDate","getDate","currDate","currMonth","getMonth","currYear","getFullYear","concat","storage","balance","budget","AppInitialState","total","Budget","componentDidMount","cachedHits","localStorage","getItem","loadIndFunc","time","setState","isLoaded","setTimeout","parsed","JSON","parse","handleClearStateStorage","_updateTotal","state","requiredCosts","_countRequiredCost","_writeToLocal","bind","assertThisInitialized","reduce","accumulator","currentValue","_writeToState","data","defineProperty","setItem","stringify","class","height","textAlign","Income_Income","Operation_Operation","Total_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0217646.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar2.1138fb37.svg\";","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\nimport calendar from '../img/calendar2.svg';\r\n\r\nexport default class Income extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.datePick = React.createRef();\r\n  }\r\n\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"income\", value: value});\r\n  }\r\n  handleChangeDays = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"days\", value: value});\r\n  }\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    // event.target.value = +event.target.value;\r\n    // value = value || 0;\r\n    this.props.writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    // console.log(this.datePick);\r\n    // event.target.value = +event.target.value;\r\n    // value = value || 0;\r\n    this.props.writeToState({field: \"startDay\", value: value});\r\n  }\r\n  handleClickCalendarIcon = () => {\r\n    this.datePick.current.onInputClick();\r\n  }\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      days,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.datePick}\r\n                 selected={startDay}\r\n                 onChange={this.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  {/* <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">Дней</span> */}\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <img src={calendar} className=\"\" alt=\"Календарь\" />\r\n                      {/* <svg> <use xlinkHref={`${icons}#calendar`} /> </svg> */}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Количество дней:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"days\"\r\n                 placeholder=\"Внесите количество дней\"\r\n                 onChange={this.handleChangeDays}\r\n                 value={days}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">Дней</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class Cost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = \"\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Cost from '../model/Cost';\r\n\r\nexport default class Operation extends Component {\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const costs = [...this.props.costs];\r\n    // costs.unshift( new Cost(new Date().getTime()) );\r\n    costs.push( new Cost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let costs = [...this.props.costs];\r\n    costs = costs.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  render() {\r\n    const {\r\n        costs\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-primary mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {costs.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n// const Total = (props) => {\r\nexport default class Total extends Component {\r\n  _addZero = function (value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n  }\r\n  transformDate = (startDay, days) => {\r\n    console.log(\"Transform Date\");\r\n    let date = new Date(startDay);\r\n    date.setDate(date.getDate() + days);\r\n    const currDate = this._addZero(date.getDate());\r\n    const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  };\r\n  render() {\r\n    const {storage, balance, budget, startDay, days, percentStorage} = this.props;\r\n    return (\r\n        <div className=\"mt-2 text-white card-group text-center\">\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n              <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">Остаток {startDay ? this.transformDate(startDay, days) : \"\"}</h5>\r\n              <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">в день</h5>\r\n              <p className=\"card-text\">Ежедневный бюджет  {startDay ? this.transformDate(startDay, days) : \"\"}.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )};\r\n  };\r\n\r\n// export default Total;\r\n","import Cost from \"./Cost\";\r\n\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.income = 0;\r\n        this.startDay = new Date();\r\n        this.days = 0;\r\n        this.percentStorage = 10;\r\n        this.costs = [ new Cost(new Date().getTime()) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Total from './Total';\r\nimport Cost from '../model/Cost';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoaded: true,\r\n      income: \"\",\r\n      startDay: null,\r\n      days: \"\",\r\n      percentStorage: 10,\r\n      costs: [ new Cost(new Date().getTime()) ],\r\n      total: {\r\n        storage: 0,\r\n        balance: 0,\r\n        budget: 0\r\n      }\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    const loadIndFunc = (time) => {\r\n      this.setState({isLoaded: false});\r\n      setTimeout(() => {\r\n        this.setState({isLoaded: true});\r\n      }, time);\r\n    };\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      this.setState( parsed );\r\n      loadIndFunc(2000);\r\n    } else {\r\n      loadIndFunc(3000);\r\n    }\r\n  }\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  _updateTotal = () => {\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let costs = [...this.state.costs];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = this._countRequiredCost(costs);\r\n\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    this.setState({total}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n  _countRequiredCost = (costs) => {\r\n    let result = costs.reduce(\r\n      (accumulator, currentValue) => accumulator + currentValue.value,\r\n      0\r\n    );\r\n    return result;\r\n  }\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n  render() {\r\n    const {isLoaded} = false//this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {/* {\r\n            !isLoaded &&\r\n            <h3 style={{color: \"#4e6e73\", textAlign: \"Center\", margin: \"20px\", height: \"77vh\", \"line-height\": \"77vh\"}} >\r\n              Загрузка...\r\n            </h3>\r\n          } */}\r\n          {\r\n            !isLoaded &&\r\n            <div>\r\n              <div\r\n               class=\"d-flex flex-column justify-content-center align-items-center text-white\"\r\n               style={{height: \"60vh\"}}>\r\n                {/* <div class=\"cm-spinner\"></div> */}\r\n                <div className=\"loader-wrapper\" id=\"loader-1\">\r\n                    <h3 className=\"font-weight-lighter\" style={{textAlign: \"Center\"/* , margin: \"20px\" */}} >\r\n                      Загрузка\r\n                    </h3>\r\n                    <div id=\"loader\"></div>\r\n                </div>\r\n                {/* <div>\r\n                  <div class=\"spinner-grow\" style={{width: \"1rem\", height: \"1rem\"}} role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                  <div class=\"spinner-grow\" style={{width: \"1rem\", height: \"1rem\"}} role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                  <div class=\"spinner-grow\" style={{width: \"1rem\", height: \"1rem\"}} role=\"status\">\r\n                    <span class=\"sr-only\">Loading...</span>\r\n                  </div>\r\n                </div>*/}\r\n              </div>\r\n            </div>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             costs={this.state.costs}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <div className=\"m-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n          }\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './css/App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './css/custom.css';\nimport './css/index.css';\nimport './css/loadIndicators.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}