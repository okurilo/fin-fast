{"version":3,"sources":["logo.svg","components/Income.js","components/Operation.js","components/Total.js","model/Cost.js","model/AppInitialState.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Income","react_default","a","createElement","className","htmlFor","type","id","placeholder","onChange","this","props","handleChangeIncome","value","income","handleChangeDays","days","percentStorage","percentStorageSelect","Component","Operation","_this$props","costs","addCost","deleteCost","changeText","changeValue","map","cost","key","Object","assign","text","aria-label","aria-describedby","onClick","Total","storage","balance","budget","Cost","classCallCheck","AppInitialState","Date","getTime","total","App","_this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","cachedHits","localStorage","getItem","console","log","setState","JSON","parse","isLoaded","setTimeout","handleClearStateStorage","_updateTotal","event","parseInt","target","toConsumableArray","state","unshift","filter","handleChangeCostText","forEach","el","handleChangeCostValue","requiredCosts","_countRequiredCost","_writeToLocal","bind","assertThisInitialized","reduce","accumulator","currentValue","data","setItem","stringify","Income_Income","style","color","textAlign","margin","Operation_Operation","Total_Total","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1f251bc7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class Income extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"d-flex flex-wrap\">\r\n            <div className=\"m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.props.handleChangeIncome}\r\n                 value={this.props.income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Количество дней:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"days\"\r\n                 placeholder=\"Внесите количество дней\"\r\n                 onChange={this.props.handleChangeDays}\r\n                 value={this.props.days}/>\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">Дней</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"custom-select\"\r\n                 id=\"inputGroupSelect01\"\r\n                 value={this.props.percentStorage}\r\n                 onChange={this.props.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Operation extends Component {\r\n  render() {\r\n    const {\r\n        costs,\r\n        addCost,\r\n        deleteCost,\r\n        changeText,\r\n        changeValue\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-info mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {costs.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"w-25 form-control\"\r\n                           onChange={changeText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={changeValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div className=\"d-flex mt-2 justify-content-end\">\r\n                    <button type=\"button\" className=\"text-right btn btn-light\" onClick={ addCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget, days, percentStorage} = this.props;\r\n    return (\r\n      <div className=\"mt-2 card-group text-center\">\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n            <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">Остаток</h5>\r\n            <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">в день</h5>\r\n            <p className=\"card-text\">Ежедневный бюджет.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default class Cost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = \"\";\r\n    }\r\n}","import Cost from \"./Cost\";\r\n\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.income = \"\";\r\n        this.days = \"\";\r\n        this.percentStorage = 10;\r\n        this.costs = [ new Cost(new Date().getTime()) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Income from './components/Income';\nimport Operation from './components/Operation';\nimport Total from './components/Total';\nimport Cost from './model/Cost';\nimport AppInitialState from './model/AppInitialState';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      income: \"\",\n      days: \"\",\n      percentStorage: 10,\n      costs: [ new Cost(new Date().getTime()) ],\n      total: {\n        storage: 0,\n        balance: 0,\n        budget: 0\n      }\n    };\n  }\n  componentDidMount = () => {\n    const cachedHits = localStorage.getItem(\"finData\");\n    console.log(cachedHits);\n    if (cachedHits) {\n      this.setState( JSON.parse(cachedHits) );\n      this.setState({isLoaded: false});\n      setTimeout(() => {\n        this.setState({isLoaded: true});\n      }, 1500);\n      return;\n    }\n  }\n  handleClearStateStorage = () => {\n    this.setState( new AppInitialState(), function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeIncome = (event) => {\n    let value = parseInt( event.target.value, 10 ) || '';\n    // event.target.value = +event.target.value;\n    value = value || 0;\n    this.setState({income: value }, function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeDays = (event) => {\n    let value = parseInt( event.target.value, 10 ) || '';\n    // event.target.value = +event.target.value;\n    value = value || 0;\n    this.setState({days: value }, function () {\n      this._updateTotal();\n    });\n  }\n  percentStorageSelect = (event) => {\n    let value = parseInt( event.target.value, 10 );\n    // event.target.value = +event.target.value;\n    // value = value || 0;\n    this.setState({percentStorage: value }, function () {\n      this._updateTotal();\n    });\n\n  }\n  addCost = () => {\n    const costs = [...this.state.costs];\n    costs.unshift( new Cost(new Date().getTime()) );\n    this.setState( {costs: costs} , function () {\n      this._updateTotal();\n    });\n  }\n  deleteCost = (event) => {\n    const id = +event.target.id;\n    let costs = [...this.state.costs];\n    costs = costs.filter((cost) => {\n      return cost.id !== id;\n    });\n    this.setState({costs: costs}, function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeCostText = (event) => {\n    const id = +event.target.id;\n    const value = event.target.value;\n    let costs = [...this.state.costs];\n    costs.forEach((el) => {\n      if (el.id === id) {\n        el.text = value;\n      }\n    });\n    this.setState({costs: costs}, function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeCostValue = (event) => {\n    // event.preventDefault();\n    const id = +event.target.id;\n    const value = parseInt( event.target.value, 10 ) || '';\n    // event.target.value = +event.target.value;\n    let costs = [...this.state.costs];\n    costs.forEach((el) => {\n      if (el.id === id) {\n        el.value = value;\n      }\n    });\n    this.setState({costs: costs}, function () {\n      this._updateTotal();\n    });\n  }\n  _updateTotal = () => {\n    let income = this.state.income;\n    let days = this.state.days;\n    let costs = [...this.state.costs];\n    const percentStorage = this.state.percentStorage / 100;\n    let total = this.state.total;\n    let requiredCosts = this._countRequiredCost(costs);\n\n    total.storage = parseInt(income * percentStorage, 10) || 0;\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\n    total.budget = parseInt(total.balance / days, 10) || 0;\n    \n    this.setState({total}, function () {\n      this._writeToLocal(this.state);\n    }.bind(this));\n  }\n  _countRequiredCost = (costs) => {\n    let result = costs.reduce(\n      (accumulator, currentValue) => accumulator + currentValue.value,\n      0\n    );\n    return result;\n  }\n  _writeToLocal = (data) => {\n    localStorage.setItem(\"finData\", JSON.stringify(data));\n  }\n  render() {\n    const {isLoaded} = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n        <section className=\"m-2 text-left\">\n          <Income\n           income={this.state.income}\n           days={this.state.days}\n           percentStorage={this.state.percentStorage}\n           percentStorageSelect={this.percentStorageSelect}\n           handleChangeIncome={this.handleChangeIncome}\n           handleChangeDays={this.handleChangeDays} />\n          {!isLoaded && \n            <h3 style={{color: \"#51b0bf\", textAlign: \"Center\", margin: \"20px\"}} >\n              Загрузка...\n            </h3>}\n          {isLoaded && <Operation\n           costs={this.state.costs}\n           addCost={this.addCost}\n           deleteCost={this.deleteCost}\n           changeText={this.handleChangeCostText}\n           changeValue={this.handleChangeCostValue} ></Operation>}\n          <Total\n           storage={this.state.total.storage}\n           balance={this.state.total.balance}\n           budget={this.state.total.budget}\n           days={this.state.days}\n           percentStorage={this.state.percentStorage} ></Total>\n        </section>\n        <footer>\n          <button\n           className=\"btn btn-outline-danger\"\n           onClick={this.handleClearStateStorage} >Очистить</button>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}