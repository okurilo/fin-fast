{"version":3,"sources":["img/calendar.svg","components/Income.js","model/Cost.js","components/Operation.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Income","handleChangeIncome","event","value","parseInt","target","_this","props","writeToState","field","handleChangeDays","percentStorageSelect","handleStartDaySelect","console","log","_this$props","this","income","startDay","days","percentStorage","react_default","a","createElement","className","htmlFor","type","id","placeholder","onChange","style","width","es","selected","dateFormat","placeholderText","locale","ru","src","calendar","alt","Component","Cost","Object","classCallCheck","text","Operation","addNewCost","costs","toConsumableArray","push","Date","getTime","deleteCost","filter","cost","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","onClick","Total","_addZero","toString","length","transformDate","date","setDate","getDate","currDate","currMonth","getMonth","currYear","getFullYear","concat","storage","balance","budget","AppInitialState","total","Budget","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","cachedHits","localStorage","getItem","parsed","JSON","parse","setState","isLoaded","setTimeout","handleClearStateStorage","_updateTotal","state","requiredCosts","_countRequiredCost","_writeToLocal","bind","assertThisInitialized","reduce","accumulator","currentValue","_writeToState","data","defineProperty","setItem","stringify","color","textAlign","margin","height","line-height","Income_Income","Operation_Operation","components_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d016242a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calendar.0f0d6788.svg\";","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\nimport calendar from '../img/calendar.svg';\r\n\r\n\r\n// window.ru = ru;\r\nexport default class Income extends Component {\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"income\", value: value});\r\n  }\r\n  handleChangeDays = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"days\", value: value});\r\n  }\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    // event.target.value = +event.target.value;\r\n    // value = value || 0;\r\n    this.props.writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    console.log(value);\r\n    // event.target.value = +event.target.value;\r\n    // value = value || 0;\r\n    this.props.writeToState({field: \"startDay\", value: value});\r\n  }\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      days,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"calendar input-group\">\r\n                <DatePicker\r\n                 selected={startDay}\r\n                 onChange={this.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  {/* <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">Дней</span> */}\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">\r\n                    <img src={calendar} className=\"\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Количество дней:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"days\"\r\n                 placeholder=\"Внесите количество дней\"\r\n                 onChange={this.handleChangeDays}\r\n                 value={days}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">Дней</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class Cost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = \"\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Cost from '../model/Cost';\r\n\r\nexport default class Operation extends Component {\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const costs = [...this.props.costs];\r\n    // costs.unshift( new Cost(new Date().getTime()) );\r\n    costs.push( new Cost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let costs = [...this.props.costs];\r\n    costs = costs.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  render() {\r\n    const {\r\n        costs\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-info mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {costs.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React/* , { Component }  */from 'react';\r\n\r\nconst Total = (props) => {\r\n  const _addZero = function (value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n  }\r\n  const transformDate = (startDay, days) => {\r\n    console.log(\"Transform Date\");\r\n    let date = new Date(startDay);\r\n    date.setDate(date.getDate() + days);\r\n    const currDate = _addZero(date.getDate());\r\n    const currMonth = _addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  };\r\n  const {storage, balance, budget, startDay, days, percentStorage} = props;\r\n  return (\r\n      <div className=\"mt-2 card-group text-center\">\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n            <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">Остаток {startDay ? transformDate(startDay, days) : \"\"}</h5>\r\n            <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">в день</h5>\r\n            <p className=\"card-text\">Ежедневный бюджет  {startDay ? transformDate(startDay, days) : \"\"}.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default Total;\r\n","import Cost from \"./Cost\";\r\n\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.income = 0;\r\n        this.startDay = new Date();\r\n        this.days = 0;\r\n        this.percentStorage = 10;\r\n        this.costs = [ new Cost(new Date().getTime()) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Total from './Total';\r\nimport Cost from '../model/Cost';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isLoaded: true,\r\n      income: \"\",\r\n      startDay: null,\r\n      days: \"\",\r\n      percentStorage: 10,\r\n      costs: [ new Cost(new Date().getTime()) ],\r\n      total: {\r\n        storage: 0,\r\n        balance: 0,\r\n        budget: 0\r\n      }\r\n    };\r\n  }\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      this.setState( parsed );\r\n    } else {\r\n        this.setState({isLoaded: false});\r\n        setTimeout(() => {\r\n          this.setState({isLoaded: true});\r\n        }, 1000);\r\n    }\r\n  }\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  _updateTotal = () => {\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let costs = [...this.state.costs];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = this._countRequiredCost(costs);\r\n\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    this.setState({total}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n  _countRequiredCost = (costs) => {\r\n    let result = costs.reduce(\r\n      (accumulator, currentValue) => accumulator + currentValue.value,\r\n      0\r\n    );\r\n    return result;\r\n  }\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {\r\n            !isLoaded &&\r\n            <h3 style={{color: \"#4e6e73\", textAlign: \"Center\", margin: \"20px\", height: \"77vh\", \"line-height\": \"77vh\"}} >\r\n              Загрузка...\r\n            </h3>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             costs={this.state.costs}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n            <div className=\"mt-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}