{"version":3,"sources":["model/DailyCost.js","utils/Date.js","components/Income.js","model/MandatoryCost.js","components/Operation.js","components/Day.js","components/Daily.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["DailyCost","id","date","Object","classCallCheck","this","spended","comment","available","saved","_addZero","value","toString","length","transformDate","Date","currDate","getDate","currMonth","getMonth","currYear","getFullYear","concat","calcDaysDifference","startDay","endDay","timeDifference","Math","abs","getTime","ceil","Income","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleChangeIncome","event","parseInt","target","writeToState","field","percentStorageSelect","handleStartDaySelect","days","_updateDailyCosts","handleEndDaySelect","newDailyCosts","index","setDate","push","handleClickCalendarIcon","currentTarget","attributes","datetype","startDatePick","current","onInputClick","endDatePick","React","createRef","_this$props","income","percentStorage","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","style","width","es","ref","selected","dateFormat","placeholderText","locale","ru","cursor","onClick","alt","Component","MandatoryCost","text","Operation","addNewCost","mandatoryCost","toConsumableArray","deleteCost","filter","cost","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","Day","switchEditMode","editMode","state","setState","handleChangeDays","iconStyle","Daily","hadnleSwitchDetailShow","showDetail","btnVis","dailyCosts","Day_Day","Total","storage","balance","budget","today","tomorrow","AppInitialState","isLoaded","total","Budget","componentDidMount","time","cachedHits","localStorage","getItem","parsed","JSON","parse","setTimeout","_writeToState","data","defineProperty","_updateTotal","_writeToLocal","setItem","stringify","handleClearStateStorage","requiredCosts","reduce","accumulator","currentValue","_countRequiredCost","bind","assertThisInitialized","height","textAlign","Income_Income","Operation_Operation","Daily_Daily","Total_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e1a6dc7c.chunk.js","sourcesContent":["export default class DailyCost {\r\n    constructor( id, date ) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.spended = 0;\r\n        this.comment = \"\";\r\n        this.available = 0;\r\n        this.saved = 0;\r\n    }\r\n}","const _addZero = function(value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n};\r\nexport const transformDate = (date) => {\r\n    date = new Date(date);\r\n    const currDate = _addZero(date.getDate());\r\n    const currMonth = _addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`${currDate}.${currMonth}.${currYear}`);\r\n};\r\nexport const calcDaysDifference = (startDay, endDay) => {\r\n    const timeDifference = Math.abs(endDay.getTime() - startDay.getTime());\r\n    const days = Math.ceil(timeDifference / (1000 * 3600 * 24));\r\n    return days;\r\n};\r\n\r\n/*  transformDate = (date) => {\r\n        date = new Date(date);\r\n        const currDate = this._addZero(date.getDate());\r\n        const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n        const currYear = date.getFullYear().toString();\r\n        return (`${currDate}.${currMonth}.${currYear}`);\r\n    }; */\r\n\r\n/*   transformDate = (endDay, days) => {\r\n    // console.log(\"Transform Date\");\r\n    let date = new Date(endDay);\r\n    // date.setDate(date.getDate() + days);\r\n    const currDate = this._addZero(date.getDate());\r\n    const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  }; */","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\nimport DailyCost from \"../model/DailyCost\";\r\nimport { calcDaysDifference } from \"../utils/Date\";\r\n\r\nexport default class Income extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startDatePick = React.createRef();\r\n    this.endDatePick = React.createRef();\r\n  }\r\n  // Income\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"income\", value: value});\r\n  }\r\n  // Select input\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    this.props.writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  // Calendar\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    const endDay = this.props.endDay;\r\n    if (value.getTime() > endDay.getTime()) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(value, endDay) + 1; //If start & end dates same => +1 (not 0)\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"startDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(value, endDay, days);\r\n  }\r\n  handleEndDaySelect = (value) => {\r\n    value = value || null;\r\n    const startDay = this.props.startDay;\r\n    if (startDay.getTime() > value.getTime()) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(startDay, value) + 1; //If start & end dates same =>  +1 (not 0)\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"endDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(startDay, value, days);\r\n  }\r\n\r\n  _updateDailyCosts = (startDay, endDay, days) => {\r\n    // const dailyCosts = this.props.dailyCosts;\r\n    const newDailyCosts = [];\r\n    for (let index = 0; index < days; index++) {\r\n      let date = new Date();\r\n      date.setDate(startDay.getDate() + index);\r\n      const cost = new DailyCost(date.getTime()/*id*/, date);\r\n      // cost\r\n      newDailyCosts.push( new DailyCost(date.getTime(), date) );\r\n    }\r\n    this.props.writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  }\r\n\r\n  handleClickCalendarIcon = (event) => {\r\n    const dateType = event.currentTarget.attributes.datetype.value;\r\n    if (dateType === \"SD\") {\r\n      this.startDatePick.current.onInputClick();\r\n    } else { //ED\r\n      this.endDatePick.current.onInputClick();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      endDay,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.startDatePick}\r\n                 selected={startDay}\r\n                 onChange={this.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} datetype=\"SD\" className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата окончания:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.endDatePick}\r\n                 selected={endDay}\r\n                 onChange={this.handleEndDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату окончания\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} datetype=\"ED\" className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class MandatoryCost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MandatoryCost from '../model/MandatoryCost';\r\n\r\nexport default class Operation extends Component {\r\n\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const mandatoryCost = [...this.props.mandatoryCost];\r\n    // mandatoryCost.unshift( new MandatoryCost(new Date().getTime()) );\r\n    mandatoryCost.push( new MandatoryCost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"mandatoryCost\", value: mandatoryCost});\r\n  }\r\n\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let mandatoryCost = [...this.props.mandatoryCost];\r\n    mandatoryCost = mandatoryCost.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCost\", value: mandatoryCost});\r\n  }\r\n\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let mandatoryCost = [...this.props.mandatoryCost];\r\n    mandatoryCost.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCost\", value: mandatoryCost});\r\n  }\r\n\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let mandatoryCost = [...this.props.mandatoryCost];\r\n    mandatoryCost.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCost\", value: mandatoryCost});\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        mandatoryCost\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-primary mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {mandatoryCost.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group m-0 mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\nexport default class Day extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        editMode: false\r\n      };\r\n    }\r\n\r\n    switchEditMode = () => {\r\n        const { editMode } = this.state;\r\n        this.setState({editMode: !editMode});\r\n    }\r\n\r\n    render() {\r\n        const {editMode} = this.state;\r\n        const {cost} = this.props;\r\n        return (\r\n            <div className={\"card bg-secondary mb-1 \" + (editMode ? \"border border-warning\" : \"\")}>\r\n                <div className=\"card-body row\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <h5 className=\"card-title\">{cost.date ? transformDate(cost.date) : \"\"}</h5>\r\n                        <div>\r\n                            { editMode\r\n                                ? <input\r\n                                   type=\"text\"\r\n                                   className=\"form-control-sm w-100\"\r\n                                   id=\"spended\"\r\n                                   placeholder=\"Сумма трат за день\"\r\n                                   onChange={this.handleChangeDays}\r\n                                   value={cost.spended}/>\r\n                                : <span className=\"card-text\">Траты: {cost.spended} руб.</span> }\r\n                        </div>\r\n                        <div>\r\n                            { editMode\r\n                                ? <textarea\r\n                                   type=\"text\"\r\n                                   className=\"form-control mt-2\"\r\n                                   id=\"spended\"\r\n                                   placeholder=\"Введите коментарий\"\r\n                                   onChange={this.handleChangeDays}\r\n                                   value={cost.comment}/>\r\n                                : <span className=\"card-text\">{cost.comment}</span> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-5 d-flex flex-column justify-content-end align-items-end\">\r\n                        <div>\r\n                            <h6 className=\"card-title\">Дневной бюджет: {cost.available} руб.</h6>\r\n                            <h6 className=\"card-title\">Экономия: {cost.saved} руб.</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-1 d-flex align-items-center justify-content-end\">\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> */}\r\n                    { editMode\r\n                        ? <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-check\" /></button>\r\n                        : <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Daily.css';\r\nimport Day from './Day';\r\n\r\nconst iconStyle = {\r\n    width: \"0.8rem\",\r\n    cursor: \"pointer\"\r\n};\r\nexport default class Daily extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         showDetail: true\r\n      };\r\n    }\r\n    hadnleSwitchDetailShow = () => {\r\n        this.setState({ showDetail: !this.state.showDetail });\r\n    }\r\n    render() {\r\n        const showDetail = this.state.showDetail ? 'show' : '';\r\n        const btnVis = \"fa \" + (this.state.showDetail ? \"fa-arrow-up\" : \"fa-arrow-down\");\r\n        const { dailyCosts, writeToState } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                    <button\r\n                     type=\"button\"\r\n                     className=\" w-100 text-center btn btn-primary\"\r\n                     onClick={this.hadnleSwitchDetailShow} >\r\n                        <i  style={iconStyle}  className={\"mr-4 \" + btnVis} />\r\n                        Детализация расходов по дням\r\n                        <i  style={iconStyle}  className={\"ml-4 \" + btnVis} />\r\n                    </button>\r\n                </div>\r\n                <div className={\"daily text-white bg-primary collapse\" + showDetail} >\r\n                    {dailyCosts.map((cost)=>{\r\n                        return (\r\n                            <Day\r\n                             key={cost.id}\r\n                             cost={cost}\r\n                             writeToState={writeToState} />\r\n                        );\r\n                      })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\n// const Total = (props) => {\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget, endDay, days, percentStorage} = this.props;\r\n    return (\r\n        <div className=\"mt-2 text-white card-group text-center\">\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n              <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">Остаток {endDay ? `(до ${transformDate(endDay)})` : \"\"}</h5>\r\n              <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">в день</h5>\r\n              <p className=\"card-text\">Ежедневный бюджет  {endDay ? `(до ${transformDate(endDay)})` : \"\"}.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )};\r\n  };\r\n\r\n// export default Total;\r\n","import MandatoryCost from \"./MandatoryCost\";\r\nimport DailyCost from \"./DailyCost\";\r\n\r\nconst today = new Date();\r\nlet tomorrow = new Date();\r\ntomorrow.setDate(today.getDate() + 1);\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.isLoaded = true;\r\n        this.income = 0;\r\n        this.startDay = today;\r\n        this.endDay = tomorrow;\r\n        this.days = 2;\r\n        this.percentStorage = 10;\r\n        this.mandatoryCost = [ new MandatoryCost(today.getTime()) ];\r\n        this.dailyCosts = [ new DailyCost(today.getTime(), today), new DailyCost(tomorrow.getTime(), tomorrow) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Daily from './Daily';\r\nimport Total from './Total';\r\n// import MandatoryCost from '../model/MandatoryCost';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = new AppInitialState();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    const loadIndFunc = (time) => {\r\n      this.setState({isLoaded: false});\r\n      setTimeout(() => {\r\n        this.setState({isLoaded: true});\r\n      }, time);\r\n    };\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      parsed.endDay = parsed.endDay ? new Date(parsed.endDay) : null;\r\n      this.setState( parsed );\r\n      // loadIndFunc(2000);\r\n    } else {\r\n      loadIndFunc(3000);\r\n    }\r\n  }\r\n  // Write to state and storage functions\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _updateTotal = () => {\r\n    const _countRequiredCost = (mandatoryCost) => {\r\n      let result = mandatoryCost.reduce(\r\n        (accumulator, currentValue) => accumulator + currentValue.value,\r\n        0\r\n      );\r\n      return result;\r\n    };\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let mandatoryCost = [...this.state.mandatoryCost];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = _countRequiredCost(mandatoryCost);\r\n\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    this.setState({total}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {\r\n            !isLoaded &&\r\n            <div>\r\n              <div\r\n               className=\"d-flex flex-column justify-content-center align-items-center text-white\"\r\n               style={{height: \"85vh\"}}>\r\n                {/* <div className=\"cm-spinner\"></div> */}\r\n                <div className=\"loader-wrapper\" id=\"loader-1\">\r\n                    <h3 className=\"font-weight-lighter\" style={{textAlign: \"Center\"/* , margin: \"20px\" */}} >\r\n                      Загрузка\r\n                    </h3>\r\n                    <div id=\"loader\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             dailyCosts={this.state.dailyCosts}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             mandatoryCost={this.state.mandatoryCost}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Daily\r\n             dailyCosts={this.state.dailyCosts}\r\n             writeToState={this._writeToState} ></Daily>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <div className=\"m-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n          }\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './css/App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './css/custom.css';\nimport './css/index.css';\nimport './css/loadIndicators.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}