{"version":3,"sources":["logo.svg","components/Income.js","components/Operation.js","components/Total.js","model/Cost.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Income","react_default","a","createElement","className","htmlFor","type","id","onChange","this","props","handleChangeIncome","value","income","handleChangeDays","days","Component","Operation","_this$props","costs","addCost","deleteCost","changeText","changeValue","map","cost","key","Object","assign","text","placeholder","aria-label","aria-describedby","onClick","Total","storage","balance","budget","class","Cost","classCallCheck","App","_this","possibleConstructorReturn","getPrototypeOf","call","event","parseInt","target","setState","_updateTotal","toConsumableArray","state","unshift","Date","getTime","filter","handleChangeCostText","forEach","el","handleChangeCostValue","total","Income_Income","Operation_Operation","Total_Total","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bb4f9199.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class Income extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"d-flex\">\r\n            <div>\r\n              <label htmlFor=\"income\">Доход</label>\r\n              <div className=\"input-group\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">RUB</span>\r\n                </div>\r\n                <input\r\n                 type=\"number\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 onChange={this.props.handleChangeIncome}\r\n                 value={this.props.income}/>\r\n              </div>\r\n            </div>\r\n            <div className=\"ml-3\" >\r\n              <label htmlFor=\"days\">Количество дней</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"number\"\r\n                 className=\"form-control\"\r\n                 id=\"days\"\r\n                 onChange={this.props.handleChangeDays}\r\n                 value={this.props.days}/>\r\n                <div className=\"input-group-append\">\r\n                  <span className=\"input-group-text\">Дней</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Operation extends Component {\r\n  render() {\r\n    const {\r\n        costs,\r\n        addCost,\r\n        deleteCost,\r\n        changeText,\r\n        changeValue\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-info mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {costs.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"w-50 form-control\"\r\n                           onChange={changeText}\r\n                           value={cost.text}\r\n                           placeholder=\"Категория\" aria-label=\"Категория\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={changeValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                <div className=\"d-flex mt-2 justify-content-end\">\r\n                    <button type=\"button\" className=\"text-right btn btn-light\" onClick={ addCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget} = this.props;\r\n    return (\r\n      <div className=\"mt-2 card-group text-center\">\r\n        <div className=\"card\">\r\n          <h4 className=\"pb-3 mt-3\" >{storage}</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title\">Накопления (процент)</h5>\r\n            <p class=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h4 className=\"pb-3 mt-3\" >{balance}</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">Остаток</h5>\r\n            <p class=\"card-text\">Сумма на расходы, которую можно потратить за {} дней.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <h4 className=\"pb-3 mt-3\" >{budget}</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">Бюджет</h5>\r\n            <p class=\"card-text\">Ежедневный бюджет, разбитый на указанное количество дней.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export default class Cost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n    }\r\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Income from './components/Income';\nimport Operation from './components/Operation';\nimport Total from './components/Total';\nimport Cost from './model/Cost';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      income: 0,\n      days: 0,\n      costs: [ new Cost(new Date().getTime()) ],\n      total: {\n        storage: 0,\n        balance: 0,\n        budget: 0\n      }\n    };\n  }\n  handleChangeIncome = (event) => {\n    let value = parseInt( event.target.value, 10 );\n    value = value || 0;\n    this.setState({income: value }, function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeDays = (event) => {\n    let value = parseInt( event.target.value, 10 );\n    value = value || 0;\n    this.setState({days: value }, function () {\n      this._updateTotal();\n    });\n  }\n  addCost = () => {\n    const costs = [...this.state.costs];\n    costs.unshift( new Cost(new Date().getTime()) );\n    this.setState( {costs: costs} , function () {\n      this._updateTotal();\n    });\n  }\n  deleteCost = (event) => {\n    const id = +event.target.id;\n    let costs = [...this.state.costs];\n    costs = costs.filter((cost) => {\n      return cost.id !== id;\n    });\n    this.setState({costs: costs}, function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeCostText = (event) => {\n    const id = +event.target.id;\n    const value = event.target.value;\n    let costs = [...this.state.costs];\n    costs.forEach((el) => {\n      if (el.id === id) {\n        el.text = value;\n      }\n    });\n    this.setState({costs: costs}, function () {\n      this._updateTotal();\n    });\n  }\n  handleChangeCostValue = (event) => {\n    const id = +event.target.id;\n    const value = event.target.value;\n    let costs = [...this.state.costs];\n    costs.forEach((el) => {\n      if (el.id === id) {\n        el.value = value;\n      }\n    });\n    this.setState({costs: costs}, function () {\n      this._updateTotal();\n    });\n  }\n  _updateTotal = () => {\n    let income = this.state.income;\n    let days = this.state.days;\n    let costs = [...this.state.costs];\n    let total = this.state.total;\n    total.storage = parseInt(income * 0.2, 10);\n    total.balance = parseInt(income - total.storage, 10);\n    total.budget = parseInt(total.balance / days, 10);\n    this.setState({total});\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"\" >Рассчёт доходности</h3>\n        </header>\n        <section className=\"m-3 text-left\">\n          <Income\n           income={this.state.income}\n           days={this.state.days}\n           handleChangeIncome={this.handleChangeIncome}\n           handleChangeDays={this.handleChangeDays} />\n          <Operation\n           costs={this.state.costs}\n           addCost={this.addCost}\n           deleteCost={this.deleteCost}\n           changeText={this.handleChangeCostText}\n           changeValue={this.handleChangeCostValue} ></Operation>\n          <Total\n           storage={this.state.total.storage}\n           balance={this.state.total.balance}\n           budget={this.state.total.budget} ></Total>\n        </section>\n        <footer></footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}