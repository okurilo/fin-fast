{"version":3,"sources":["model/DailyCost.js","utils/Date.js","components/Income.js","model/MandatoryCosts.js","components/Operation.js","components/Day.js","components/Daily.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["DailyCost","id","date","Object","classCallCheck","this","spended","comment","available","saved","_addZero","value","toString","length","transformDate","Date","currDate","getDate","currMonth","getMonth","currYear","getFullYear","concat","calcDaysDifference","startDay","endDay","time","timeDifference","Math","abs","getTime","ceil","Income","props","_this","possibleConstructorReturn","getPrototypeOf","call","handleChangeIncome","event","parseInt","target","writeToState","field","percentStorageSelect","handleStartDaySelect","setHours","days","_updateDailyCosts","handleEndDaySelect","newDailyCosts","index","setDate","cost","push","handleClickCalendarIcon","currentTarget","attributes","name","startDatePick","current","onInputClick","endDatePick","React","createRef","_this$props","income","percentStorage","react_default","a","createElement","className","htmlFor","type","placeholder","onChange","style","width","es","ref","selected","dateFormat","placeholderText","locale","ru","cursor","onClick","alt","Component","MandatoryCost","text","Operation","addNewCost","mandatoryCosts","toConsumableArray","deleteCost","filter","handleChangeCostText","forEach","el","handleChangeCostValue","_this2","map","key","assign","aria-label","aria-describedby","Day","switchEditMode","editMode","state","setState","changeCostValue","iconStyle","Daily","handleSwitchDetailShow","showDetail","dailyCosts","_event$currentTarget","costIndex","findIndex","btnVis","Day_Day","Total","storage","balance","budget","today","tomorrow","AppInitialState","isLoaded","total","Budget","componentDidMount","cachedHits","localStorage","getItem","parsed","JSON","parse","setTimeout","_writeToState","data","defineProperty","_updateTotal","_writeToLocal","setItem","stringify","handleClearStateStorage","requiredCosts","reduce","accumulator","currentValue","_countRequiredCost","_reCalcDailyCosts","bind","assertThisInitialized","temp","console","log","height","textAlign","Income_Income","Operation_Operation","Daily_Daily","Total_Total","App","components_Budget","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.eca037e7.chunk.js","sourcesContent":["export default class DailyCost {\r\n    constructor( id, date ) {\r\n        this.id = id;\r\n        this.date = date;\r\n        this.spended = 0;\r\n        this.comment = \"\";\r\n        this.available = 0;\r\n        this.saved = 0;\r\n    }\r\n}","const _addZero = function(value) {\r\n    value = value.toString() || \"\";\r\n    if (value.length === 1) {\r\n        value = \"0\" + value;\r\n    }\r\n    return value;\r\n};\r\nexport const transformDate = (date) => {\r\n    date = new Date(date);\r\n    const currDate = _addZero(date.getDate());\r\n    const currMonth = _addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`${currDate}.${currMonth}.${currYear}`);\r\n};\r\nexport const calcDay = (time) => {\r\n    const day = Math.ceil(time / (1000 * 3600 * 24));\r\n    return day;\r\n}\r\nexport const calcDaysDifference = (startDay, endDay) => {\r\n    const timeDifference = Math.abs(endDay.getTime() - startDay.getTime());\r\n    const days = calcDay(timeDifference);\r\n    return days;\r\n};\r\n\r\n/*  transformDate = (date) => {\r\n        date = new Date(date);\r\n        const currDate = this._addZero(date.getDate());\r\n        const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n        const currYear = date.getFullYear().toString();\r\n        return (`${currDate}.${currMonth}.${currYear}`);\r\n    }; */\r\n\r\n/*   transformDate = (endDay, days) => {\r\n    // console.log(\"Transform Date\");\r\n    let date = new Date(endDay);\r\n    // date.setDate(date.getDate() + days);\r\n    const currDate = this._addZero(date.getDate());\r\n    const currMonth = this._addZero(date.getMonth() + 1); //Months are zero based\r\n    const currYear = date.getFullYear().toString();\r\n    return (`(до ${currDate}.${currMonth}.${currYear})`);\r\n  }; */","import React, { Component } from 'react';\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ru from 'date-fns/locale/ru';\r\nimport DailyCost from \"../model/DailyCost\";\r\nimport { calcDaysDifference } from \"../utils/Date\";\r\n\r\nexport default class Income extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.startDatePick = React.createRef();\r\n    this.endDatePick = React.createRef();\r\n  }\r\n  // Income\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    value = value || 0;\r\n    this.props.writeToState({field: \"income\", value: value});\r\n  }\r\n  // Select input\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    this.props.writeToState({field: \"percentStorage\", value: value});\r\n  }\r\n  // Calendar\r\n  handleStartDaySelect = (value) => {\r\n    value = value || null;\r\n    const endDay = this.props.endDay;\r\n    value.setHours(0,0,0,0);\r\n    endDay.setHours(0,0,0,0);\r\n    if (value.getTime() > endDay.getTime()) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(value, endDay) + 1; //If start & end dates same => +1 (not 0)\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"startDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(value, endDay, days);\r\n  }\r\n  handleEndDaySelect = (value) => {\r\n    value = value || null;\r\n    const startDay = this.props.startDay;\r\n    value.setHours(0,0,0,0);\r\n    startDay.setHours(0,0,0,0);\r\n    if (startDay.getTime() > value.getTime()) {\r\n      return;\r\n    }\r\n    const days = calcDaysDifference(startDay, value) + 1; //If start & end dates same =>  +1 (not 0)\r\n    this.props.writeToState({field: \"days\", value: days});\r\n    this.props.writeToState({field: \"endDay\", value: value});\r\n\r\n    // Update detail daily cost block\r\n    this._updateDailyCosts(startDay, value, days);\r\n  }\r\n\r\n  _updateDailyCosts = (startDay, endDay, days) => {\r\n    // const dailyCosts = this.props.dailyCosts;\r\n    const newDailyCosts = [];\r\n    for (let index = 0; index < days; index++) {\r\n      let date = new Date();\r\n      date.setDate(startDay.getDate() + index);\r\n      const cost = new DailyCost(date.getTime()/*id*/, date);\r\n      newDailyCosts.push( cost );\r\n    }\r\n    this.props.writeToState({field: \"dailyCosts\", value: newDailyCosts});\r\n  }\r\n\r\n  handleClickCalendarIcon = (event) => {\r\n    const name = event.currentTarget.attributes.name.value;\r\n    if (name === \"SD\") {\r\n      this.startDatePick.current.onInputClick();\r\n    } else { //ED\r\n      this.endDatePick.current.onInputClick();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      income,\r\n      startDay,\r\n      endDay,\r\n      percentStorage\r\n    } = this.props;\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.handleChangeIncome}\r\n                 value={income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата начала:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.startDatePick}\r\n                 selected={startDay}\r\n                 onChange={this.handleStartDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату начала\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} name=\"SD\" className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"calendar col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Дата окончания:</label>\r\n              <div className=\"input-group\">\r\n                <DatePicker\r\n                 ref={this.endDatePick}\r\n                 selected={endDay}\r\n                 onChange={this.handleEndDaySelect}\r\n                 dateFormat=\"d MMMM yyyy\"\r\n                 placeholderText=\"Выберите дату окончания\"\r\n                 locale={ru} />\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\", cursor: \"pointer\"}} name=\"ED\" className=\"input-group-text justify-content-center\" onClick={this.handleClickCalendarIcon}>\r\n                    <i className=\"fa fa-calendar\" alt=\"Календарь\" />\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={percentStorage}\r\n                 onChange={this.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class MandatoryCost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = 0;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MandatoryCost from '../model/MandatoryCosts';\r\n\r\nexport default class Operation extends Component {\r\n\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const mandatoryCosts = [...this.props.mandatoryCosts];\r\n    // mandatoryCosts.unshift( new MandatoryCost(new Date().getTime()) );\r\n    mandatoryCosts.push( new MandatoryCost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts = mandatoryCosts.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let mandatoryCosts = [...this.props.mandatoryCosts];\r\n    mandatoryCosts.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"mandatoryCosts\", value: mandatoryCosts});\r\n  }\r\n\r\n  render() {\r\n    const {\r\n        mandatoryCosts\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-primary mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {mandatoryCosts.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group m-0 mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\nexport default class Day extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        editMode: false\r\n      };\r\n    }\r\n\r\n    switchEditMode = () => {\r\n        const { editMode } = this.state;\r\n        this.setState({editMode: !editMode});\r\n    }\r\n\r\n    // // Income\r\n    // handleChangeIncome = (event) => {\r\n    //     let value = parseInt( event.target.value, 10 ) || '';\r\n    //     value = value || 0;\r\n    //     this.props.writeToState({field: \"income\", value: value});\r\n    // }\r\n    // handleChange = (e) => {\r\n    //     const { id, value } = e.currentTarget;\r\n    //     this.setState({ [id]: value });\r\n    // }\r\n\r\n    render() {\r\n        const {editMode} = this.state;\r\n        const {cost, changeCostValue} = this.props;\r\n        return (\r\n            <div className={\"card bg-secondary mb-1 \" + (editMode ? \"border border-warning\" : \"\")}>\r\n                <div className=\"card-body row\">\r\n                    <div className=\"col-12 col-lg-6\">\r\n                        <h5 className=\"card-title\">{cost.date ? transformDate(cost.date) : \"\"}</h5>\r\n                        <div>\r\n                            { editMode\r\n                                ? <input\r\n                                   type=\"text\"\r\n                                   name=\"spended\"\r\n                                   className=\"form-control-sm w-100\"\r\n                                   id={cost.id}\r\n                                   placeholder=\"Сумма трат за день\"\r\n                                   onChange={changeCostValue}\r\n                                   value={cost.spended}/>\r\n                                : <span className=\"card-text\">Траты: {cost.spended} руб.</span> }\r\n                        </div>\r\n                        <div>\r\n                            { editMode\r\n                                ? <textarea\r\n                                   type=\"text\"\r\n                                   name=\"comment\"\r\n                                   className=\"form-control mt-2\"\r\n                                   id={cost.id}\r\n                                   placeholder=\"Введите коментарий\"\r\n                                   onChange={changeCostValue}\r\n                                   value={cost.comment}/>\r\n                                : <span className=\"card-text\">{cost.comment}</span> }\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-5 d-flex flex-column justify-content-end align-items-end\">\r\n                        <div>\r\n                            <h6 className=\"card-title\">Дневной бюджет: {cost.available} руб.</h6>\r\n                            <h6 className=\"card-title\">Экономия: {cost.saved} руб.</h6>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-lg-1 d-flex align-items-center justify-content-end\">\r\n                    {/* <button className=\"btn btn-primary\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> */}\r\n                    { editMode\r\n                        ? <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-check\" /></button>\r\n                        : <button className=\"btn btn-secondary border border-success w-100\" onClick={this.switchEditMode} ><i className=\"fa fa-pencil\" /></button> }\r\n                </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../css/Daily.css';\r\nimport Day from './Day';\r\n\r\nconst iconStyle = {\r\n    width: \"0.8rem\",\r\n    cursor: \"pointer\"\r\n};\r\nexport default class Daily extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         showDetail: true\r\n      };\r\n    }\r\n    handleSwitchDetailShow = () => {\r\n        this.setState({ showDetail: !this.state.showDetail });\r\n    }\r\n    handleChangeCostValue = (event) => {\r\n        const dailyCosts = [...this.props.dailyCosts];\r\n        const { id, name } = event.currentTarget;\r\n        let value;\r\n        switch (name) {\r\n            case \"spended\":\r\n                value = parseInt( event.target.value, 10 ) || '';\r\n                value = value || 0;\r\n                break;\r\n            case \"comment\":\r\n            default:\r\n                value = event.target.value;\r\n                break;\r\n        }\r\n        const callback = (el, index) => {\r\n            return +el.id === +id;\r\n        };\r\n        let costIndex = dailyCosts.findIndex(callback);\r\n        dailyCosts[costIndex][name] = value;\r\n        \r\n        this.props.writeToState({field: \"dailyCosts\", value: dailyCosts});\r\n    }\r\n    render() {\r\n        const showDetail = this.state.showDetail ? 'show' : '';\r\n        const btnVis = \"fa \" + (this.state.showDetail ? \"fa-arrow-up\" : \"fa-arrow-down\");\r\n        const { dailyCosts } = this.props;\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                    <button\r\n                     type=\"button\"\r\n                     className=\" w-100 text-center btn btn-primary\"\r\n                     onClick={this.handleSwitchDetailShow} >\r\n                        <i  style={iconStyle}  className={\"mr-4 \" + btnVis} />\r\n                        Детализация расходов по дням\r\n                        <i  style={iconStyle}  className={\"ml-4 \" + btnVis} />\r\n                    </button>\r\n                </div>\r\n                <div className={\"daily text-white bg-primary collapse\" + showDetail} >\r\n                    {dailyCosts.map((cost)=>{\r\n                        return (\r\n                            <Day\r\n                             key={cost.id}\r\n                             cost={cost}\r\n                             changeCostValue={this.handleChangeCostValue} />\r\n                        );\r\n                      })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {transformDate} from \"../utils/Date\";\r\n\r\n// const Total = (props) => {\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget, endDay, days, percentStorage} = this.props;\r\n    return (\r\n        <div className=\"mt-2 text-white card-group text-center\">\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n              <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">Остаток {endDay ? `(до ${transformDate(endDay)})` : \"\"}</h5>\r\n              <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"card bg-primary border-secondary rounded-lg\">\r\n            <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n            <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n              <h5 className=\"card-title \">в день</h5>\r\n              <p className=\"card-text\">Ежедневный бюджет  {endDay ? `(до ${transformDate(endDay)})` : \"\"}.</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )};\r\n  };\r\n\r\n// export default Total;\r\n","import MandatoryCost from \"./MandatoryCosts\";\r\nimport DailyCost from \"./DailyCost\";\r\n\r\nconst today = new Date();\r\nlet tomorrow = new Date();\r\ntomorrow.setDate(today.getDate() + 1);\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.isLoaded = true;\r\n        this.income = 0;\r\n        this.startDay = today;\r\n        this.endDay = tomorrow;\r\n        this.days = 2;\r\n        this.percentStorage = 10;\r\n        this.mandatoryCosts = [ new MandatoryCost(today.getTime()) ];\r\n        this.dailyCosts = [ new DailyCost(today.getTime(), today), new DailyCost(tomorrow.getTime(), tomorrow) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Daily from './Daily';\r\nimport Total from './Total';\r\n// import MandatoryCosts from '../model/MandatoryCosts';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = new AppInitialState();\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    const cachedHits = localStorage.getItem(\"finData\");\r\n    const loadIndFunc = (time) => {\r\n      this.setState({isLoaded: false});\r\n      setTimeout(() => {\r\n        this.setState({isLoaded: true});\r\n      }, time);\r\n    };\r\n    // console.log(cachedHits);\r\n    if (cachedHits) {\r\n      let parsed = JSON.parse(cachedHits);\r\n      parsed.startDay = parsed.startDay ? new Date(parsed.startDay) : null;\r\n      parsed.endDay = parsed.endDay ? new Date(parsed.endDay) : null;\r\n      this.setState( parsed );\r\n      // loadIndFunc(2000);\r\n    } else {\r\n      loadIndFunc(3000);\r\n    }\r\n  }\r\n  // Write to state and storage functions\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n\r\n  _updateTotal = () => {\r\n    // TODO: Add switcher for fields and update only used branches\r\n    const _countRequiredCost = (mandatoryCosts) => {\r\n      let result = mandatoryCosts.reduce(\r\n        (accumulator, currentValue) => accumulator + currentValue.value,\r\n        0\r\n      );\r\n      return result;\r\n    };\r\n\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let mandatoryCosts = [...this.state.mandatoryCosts];\r\n    let dailyCosts = [...this.state.dailyCosts];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = _countRequiredCost(mandatoryCosts);\r\n\r\n    // Calc Total info\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n\r\n    // Calc Daily info\r\n    dailyCosts = this._reCalcDailyCosts(dailyCosts, total.budget);\r\n\r\n    this.setState({total, dailyCosts}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n\r\n  _reCalcDailyCosts = (dailyCosts, budget) => {\r\n    let temp = dailyCosts.reduce(\r\n      function (accumulator, currentValue, index) {\r\n        if (index === 0) {\r\n          currentValue.available = budget;\r\n          currentValue.saved = currentValue.available - currentValue.spended;\r\n        } else {\r\n          // currentValue.available = dailyCosts[index - 1].available - currentValue.spended;\r\n          currentValue.available = budget + dailyCosts[index - 1].saved;\r\n          currentValue.saved = currentValue.available - currentValue.spended;\r\n        }\r\n          accumulator.push(currentValue);\r\n          return accumulator;\r\n        }, []\r\n    );\r\n    console.log(temp);\r\n    return temp;\r\n  }\r\n\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          {\r\n            !isLoaded &&\r\n            <div>\r\n              <div\r\n               className=\"d-flex flex-column justify-content-center align-items-center text-white\"\r\n               style={{height: \"85vh\"}}>\r\n                {/* <div className=\"cm-spinner\"></div> */}\r\n                <div className=\"loader-wrapper\" id=\"loader-1\">\r\n                    <h3 className=\"font-weight-lighter\" style={{textAlign: \"Center\"/* , margin: \"20px\" */}} >\r\n                      Загрузка\r\n                    </h3>\r\n                    <div id=\"loader\"></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Income\r\n             income={this.state.income}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             dailyCosts={this.state.dailyCosts}\r\n             percentStorage={this.state.percentStorage}\r\n             writeToState={this._writeToState} />\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Operation\r\n             mandatoryCosts={this.state.mandatoryCosts}\r\n             writeToState={this._writeToState} ></Operation>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Daily\r\n             dailyCosts={this.state.dailyCosts}\r\n             writeToState={this._writeToState} ></Daily>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <Total\r\n             storage={this.state.total.storage}\r\n             balance={this.state.total.balance}\r\n             budget={this.state.total.budget}\r\n             startDay={this.state.startDay}\r\n             endDay={this.state.endDay}\r\n             days={this.state.days}\r\n             percentStorage={this.state.percentStorage} ></Total>\r\n          }\r\n          {\r\n            isLoaded &&\r\n            <div className=\"m-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n          }\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\n/* import logo from './logo.svg'; */\nimport './css/App.css';\n\nimport Budget from './components/Budget';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          <Budget/>\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './css/custom.css';\nimport './css/index.css';\nimport './css/loadIndicators.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}