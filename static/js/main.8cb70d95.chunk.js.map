{"version":3,"sources":["logo.svg","components/Income.js","model/Cost.js","components/Operation.js","components/Total.js","model/AppInitialState.js","components/Budget.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Income","react_default","a","createElement","className","htmlFor","type","id","placeholder","onChange","this","props","handleChangeIncome","value","income","style","width","handleChangeDays","days","percentStorage","percentStorageSelect","Component","Cost","Object","classCallCheck","text","Operation","addNewCost","costs","toConsumableArray","_this","push","Date","getTime","writeToState","field","deleteCost","event","target","filter","cost","handleChangeCostText","forEach","el","handleChangeCostValue","parseInt","_this2","map","key","assign","aria-label","aria-describedby","onClick","Total","_this$props","storage","balance","budget","AppInitialState","total","Budget","possibleConstructorReturn","getPrototypeOf","call","handleClearStateStorage","setState","_updateTotal","state","requiredCosts","_countRequiredCost","_writeToLocal","bind","assertThisInitialized","reduce","accumulator","currentValue","_writeToState","data","defineProperty","localStorage","setItem","JSON","stringify","isLoaded","Income_Income","color","textAlign","margin","Operation_Operation","Total_Total","App","componentDidMount","cachedHits","getItem","console","log","parse","handleRollLoaded","setTimeout","status","components_Budget","loaded","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8cb70d95.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\nexport default class Income extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"income\">Доход:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"income\"\r\n                 placeholder=\"Введите сумму дохода\"\r\n                 onChange={this.props.handleChangeIncome}\r\n                 value={this.props.income}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">RUB</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"days\">Количество дней:</label>\r\n              <div className=\"input-group\">\r\n                <input\r\n                 type=\"text\"\r\n                 className=\"form-control\"\r\n                 id=\"days\"\r\n                 placeholder=\"Внесите количество дней\"\r\n                 onChange={this.props.handleChangeDays}\r\n                 value={this.props.days}/>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">Дней</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-2\" >\r\n              <label className=\"text-light\" htmlFor=\"percent\">Процент накоплений:</label>\r\n              <div className=\"input-group\">\r\n                <select\r\n                 className=\"form-control custom-select\"\r\n                 id=\"percent\"\r\n                 value={this.props.percentStorage}\r\n                 onChange={this.props.percentStorageSelect} >\r\n                  <option value=\"0\">0</option>\r\n                  <option value=\"10\">10</option>\r\n                  <option value=\"15\">15</option>\r\n                  <option value=\"20\">20</option>\r\n                  <option value=\"25\">25</option>\r\n                  <option value=\"30\">30</option>\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                  <span style={{width: \"4rem\"}} className=\"input-group-text justify-content-center\">%</span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","export default class Cost {\r\n    constructor( id ) {\r\n        this.id = id;\r\n        this.text = \"\";\r\n        this.value = \"\";\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Cost from '../model/Cost';\r\n\r\nexport default class Operation extends Component {\r\n  addNewCost = () => {\r\n    // const {state} = this.props;\r\n    const costs = [...this.props.costs];\r\n    // costs.unshift( new Cost(new Date().getTime()) );\r\n    costs.push( new Cost(new Date().getTime()) );\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  deleteCost = (event) => {\r\n    const id = +event.target.id;\r\n    // const {state} = this.props;\r\n    let costs = [...this.props.costs];\r\n    costs = costs.filter((cost) => {\r\n      return cost.id !== id;\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostText = (event) => {\r\n    const id = +event.target.id;\r\n    const value = event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.text = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  handleChangeCostValue = (event) => {\r\n    // event.preventDefault();\r\n    const id = +event.target.id;\r\n    const value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    let costs = [...this.props.costs];\r\n    costs.forEach((el) => {\r\n      if (el.id === id) {\r\n        el.value = value;\r\n      }\r\n    });\r\n    this.props.writeToState({field: \"costs\", value: costs});\r\n  }\r\n  render() {\r\n    const {\r\n        costs\r\n    } = this.props;\r\n    return (\r\n        <div className=\"card text-white bg-info mt-2\">\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">Обязательные расходы</h5>\r\n                {costs.map((cost)=>{\r\n                    return (\r\n                        <div key={cost.id} className=\"input-group mb-2\">\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostValue}\r\n                           value={cost.value}\r\n                           placeholder=\"Сумма\" aria-label=\"Сумма\" aria-describedby=\"button-addon4\"/>\r\n                          <input\r\n                           {...cost}\r\n                           type=\"text\"\r\n                           className=\"form-control\"\r\n                           onChange={this.handleChangeCostText}\r\n                           value={cost.text}\r\n                           placeholder=\"Введите текст категории\" aria-label=\"Введите текст категории\" aria-describedby=\"button-addon4\"/>\r\n                          <div className=\"input-group-append\" id=\"button-addon4\">\r\n                            {/* <button className=\"btn btn-outline-light\" type=\"button\">Edit</button> */}\r\n                            <button\r\n                             {...cost}\r\n                             onClick={this.deleteCost}\r\n                             className=\"border-left btn btn-dark\"\r\n                             type=\"button\">x</button>\r\n                          </div>\r\n                        </div>\r\n                    );\r\n                  })}\r\n                <div className=\"d-flex mt-2 justify-content-center\">\r\n                  <button type=\"button\" className=\"mr-2 text-right btn btn-light\" onClick={ this.addNewCost } >Добавить</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Total extends Component {\r\n  render() {\r\n    const {storage, balance, budget, days, percentStorage} = this.props;\r\n    return (\r\n      <div className=\"mt-2 card-group text-center\">\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{storage} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title\">Накопления ({percentStorage}%)</h5>\r\n            <p className=\"card-text\">Сумма, которую необходимо отложить в Н/З.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{balance} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">Остаток</h5>\r\n            <p className=\"card-text\">Сумма на расходы, которую можно потратить за {days} дней.</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"card border-secondary\">\r\n          <h4 className=\"pb-3 mt-3\" >{budget} RUB</h4>\r\n          <div className=\"pt-0 card-body d-flex flex-column justify-content-between\">\r\n            <h5 className=\"card-title \">в день</h5>\r\n            <p className=\"card-text\">Ежедневный бюджет.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import Cost from \"./Cost\";\r\n\r\nexport default class AppInitialState {\r\n    constructor( ) {\r\n        this.income = \"\";\r\n        this.days = \"\";\r\n        this.percentStorage = 10;\r\n        this.costs = [ new Cost(new Date().getTime()) ];\r\n        this.total = {\r\n            storage: 0,\r\n            balance: 0,\r\n            budget: 0\r\n        };\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport Income from './Income';\r\nimport Operation from './Operation';\r\nimport Total from './Total';\r\nimport Cost from '../model/Cost';\r\nimport AppInitialState from '../model/AppInitialState';\r\n\r\nclass Budget extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = props.data;\r\n  }\r\n  handleClearStateStorage = () => {\r\n    this.setState( new AppInitialState(), function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  handleChangeIncome = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    value = value || 0;\r\n    this.setState({income: value }, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  handleChangeDays = (event) => {\r\n    let value = parseInt( event.target.value, 10 ) || '';\r\n    // event.target.value = +event.target.value;\r\n    value = value || 0;\r\n    this.setState({days: value }, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  percentStorageSelect = (event) => {\r\n    let value = parseInt( event.target.value, 10 );\r\n    // event.target.value = +event.target.value;\r\n    // value = value || 0;\r\n    this.setState({percentStorage: value }, function () {\r\n      this._updateTotal();\r\n    });\r\n\r\n  }\r\n  _updateTotal = () => {\r\n    let income = this.state.income;\r\n    let days = this.state.days;\r\n    let costs = [...this.state.costs];\r\n    const percentStorage = this.state.percentStorage / 100;\r\n    let total = this.state.total;\r\n    let requiredCosts = this._countRequiredCost(costs);\r\n\r\n    total.storage = parseInt(income * percentStorage, 10) || 0;\r\n    total.balance = parseInt(income - total.storage, 10) - requiredCosts || 0;\r\n    total.budget = parseInt(total.balance / days, 10) || 0;\r\n    \r\n    this.setState({total}, function () {\r\n      this._writeToLocal(this.state);\r\n    }.bind(this));\r\n  }\r\n  _countRequiredCost = (costs) => {\r\n    let result = costs.reduce(\r\n      (accumulator, currentValue) => accumulator + currentValue.value,\r\n      0\r\n    );\r\n    return result;\r\n  }\r\n  _writeToState = (data) => {\r\n    this.setState({[data.field]: data.value}, function () {\r\n      this._updateTotal();\r\n    });\r\n  }\r\n  _writeToLocal = (data) => {\r\n    localStorage.setItem(\"finData\", JSON.stringify(data));\r\n  }\r\n  render() {\r\n    const {isLoaded} = this.state;\r\n    return (\r\n        <section className=\"m-2 text-left\">\r\n          <Income\r\n           income={this.state.income}\r\n           days={this.state.days}\r\n           percentStorage={this.state.percentStorage}\r\n           percentStorageSelect={this.percentStorageSelect}\r\n           handleChangeIncome={this.handleChangeIncome}\r\n           handleChangeDays={this.handleChangeDays} />\r\n          {!isLoaded &&\r\n            <h3 style={{color: \"#4e6e73\", textAlign: \"Center\", margin: \"20px\"}} >\r\n              Загрузка...\r\n            </h3>}\r\n          {isLoaded && <Operation\r\n           costs={this.state.costs}\r\n           writeToState={this._writeToState} ></Operation>}\r\n          <Total\r\n           storage={this.state.total.storage}\r\n           balance={this.state.total.balance}\r\n           budget={this.state.total.budget}\r\n           days={this.state.days}\r\n           percentStorage={this.state.percentStorage} ></Total>\r\n            <div className=\"mt-2 d-flex justify-content-center\" >\r\n              <button\r\n               className=\"btn btn-outline-danger\"\r\n               onClick={this.handleClearStateStorage} >Очистить</button>\r\n            </div>\r\n        </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Budget;\r\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Budget from './components/Budget';\nimport AppInitialState from './model/AppInitialState';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaded: true,\n      data: new AppInitialState()\n    };\n  }\n  componentDidMount = () => {\n    const cachedHits = localStorage.getItem(\"finData\");\n    console.log(cachedHits);\n    if (cachedHits) {\n      this.setState( {data: JSON.parse(cachedHits)} );\n      this.handleRollLoaded(false);\n      setTimeout(() => {\n        this.handleRollLoaded(true);\n      }, 1000);\n      return;\n    } else {\n        this.handleRollLoaded(true);\n    }\n  }\n  handleRollLoaded = (status) => {\n    this.setState({isLoaded: status});\n  }\n  render() {\n    const {isLoaded} = this.state;\n    return (\n      <div className=\"App\">\n        <header>\n          <h3 className=\"text-light\" >Расчёт бюджета</h3>\n        </header>\n          {isLoaded && <Budget data={this.state.data} loaded={this.handleRollLoaded}/>}\n          {!isLoaded &&\n            <h3 style={{color: \"#4e6e73\", textAlign: \"Center\", margin: \"20px\"}} >\n              Загрузка...\n            </h3>}\n        <footer>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}